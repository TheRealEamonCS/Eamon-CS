<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Eamon</name>
    </assembly>
    <members>
        <member name="T:Eamon.Framework.Args.IRecordNameListArgs">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IRecordNameListArgs.ArticleType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IRecordNameListArgs.ShowCharOwned">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IRecordNameListArgs.StateDescCode">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IRecordNameListArgs.ShowContents">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IRecordNameListArgs.GroupCountOne">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Args.IStatDisplayArgs">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.Character">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.Monster">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.ArmorString">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.SpellAbilities">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.Speed">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.CharmMon">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IStatDisplayArgs.Weight">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Args.IStatDisplayArgs.GetSpellAbility(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Args.IStatDisplayArgs.GetSpellAbility(Eamon.Framework.Primitive.Enums.Spell)">
            <summary></summary>
            <param name="spell"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Args.IWordWrapArgs">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IWordWrapArgs.CurrColumn">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Args.IWordWrapArgs.LastChar">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.DataStorage.Generic.IDbTable`1">
            <summary>
            Represents a collection of records of type T in a database.
            </summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">
            <summary>
            Gets or sets the collection of records stored in the database table.
            </summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.FreeUids">
            <summary>
            Gets or sets the collection of Uids available for reuse by new instances of this record type; may be empty.
            </summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.CurrUid">
            <summary>
            Gets or sets a sequence number representing the last Uid (unique ID) allocated to a record of type T.
            </summary>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.FreeRecords(System.Boolean)">
            <summary>
            Fully reinitializes the IDbTable and restores it to its initial (empty) state.
            </summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.GetRecordCount">
            <summary>
            Gets the number of records of type T stored in the <see cref="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">Records</see> collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.FindRecord(System.Int64)">
            <summary>
            Gets a record from the <see cref="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">Records</see> collection.
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.FindRecord(System.Type,System.Boolean)">
            <summary>
            Gets a record from the <see cref="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">Records</see> collection based on interface type.
            </summary>
            <param name="type"></param>
            <param name="exactMatch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.AddRecord(`0,System.Boolean)">
            <summary>
            Adds a record to the <see cref="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">Records</see> collection.
            </summary>
            <param name="record"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.RemoveRecord(System.Int64)">
            <summary>
            Removes a record from the <see cref="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">Records</see> collection.
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.RemoveRecord(System.Type,System.Boolean)">
            <summary>
            Removes a record from the <see cref="P:Eamon.Framework.DataStorage.Generic.IDbTable`1.Records">Records</see> collection based on interface type.
            </summary>
            <param name="type"></param>
            <param name="exactMatch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.GetRecordUid(System.Boolean)">
            <summary>
            Gets the next available record Uid.
            </summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.Generic.IDbTable`1.FreeRecordUid(System.Int64)">
            <summary>
            Frees a record Uid, making it available again for use.
            </summary>
            <param name="uid"></param>
        </member>
        <member name="T:Eamon.Framework.DataStorage.Generic.IRecordDb`1">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.Generic.IRecordDb`1.CopyAddedRecord">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.Generic.IRecordDb`1.Item(System.Int64)">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.Generic.IRecordDb`1.Records">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.DataStorage.IDatabase">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.ConfigTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.FilesetTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.CharacterTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.ModuleTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.RoomTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.ArtifactTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.EffectTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.MonsterTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.HintTable">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.DataStorage.IDatabase.GameStateTable">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadRecords``2(Eamon.Framework.DataStorage.Generic.IDbTable{``0}@,System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadConfigs(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadFilesets(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadCharacters(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadModules(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadRooms(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadArtifacts(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadEffects(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadMonsters(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadHints(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.LoadGameStates(System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveRecords``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.String,System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveConfigs(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveFilesets(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveCharacters(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveModules(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveRooms(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveArtifacts(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveEffects(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveMonsters(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveHints(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.SaveGameStates(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeRecords``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeConfigs(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeFilesets(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeCharacters(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeModules(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeRooms(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeArtifacts(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeEffects(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeMonsters(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeHints(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeGameStates(System.Boolean)">
            <summary></summary>
            <param name="dispose"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetRecordCount``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0})">
            <summary></summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetConfigCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetFilesetCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetCharacterCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetModuleCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetRoomCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetArtifactCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetEffectCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetMonsterCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetHintCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetGameStateCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindRecord``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Int64)">
            <summary></summary>
            <param name="table"></param>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindConfig(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindFileset(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindCharacter(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindModule(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindRoom(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindArtifact(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindEffect(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindMonster(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindHint(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindGameState(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FindRecord``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Type,System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="type"></param>
            <param name="exactMatch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddRecord``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},``0,System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="record"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddConfig(Eamon.Framework.IConfig,System.Boolean)">
            <summary></summary>
            <param name="config"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddFileset(Eamon.Framework.IFileset,System.Boolean)">
            <summary></summary>
            <param name="fileset"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddCharacter(Eamon.Framework.ICharacter,System.Boolean)">
            <summary></summary>
            <param name="character"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddModule(Eamon.Framework.IModule,System.Boolean)">
            <summary></summary>
            <param name="module"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddRoom(Eamon.Framework.IRoom,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddArtifact(Eamon.Framework.IArtifact,System.Boolean)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddEffect(Eamon.Framework.IEffect,System.Boolean)">
            <summary></summary>
            <param name="effect"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddMonster(Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddHint(Eamon.Framework.IHint,System.Boolean)">
            <summary></summary>
            <param name="hint"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.AddGameState(Eamon.Framework.IGameState,System.Boolean)">
            <summary></summary>
            <param name="gameState"></param>
            <param name="makeCopy"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveRecord``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Int64)">
            <summary></summary>
            <param name="table"></param>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveConfig(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveFileset(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveCharacter(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveModule(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveRoom(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveArtifact(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveEffect(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveMonster(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveHint(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveGameState(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.RemoveRecord``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Type,System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="type"></param>
            <param name="exactMatch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetRecordUid``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Boolean)">
            <summary></summary>
            <param name="table"></param>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetConfigUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetFilesetUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetCharacterUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetModuleUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetRoomUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetArtifactUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetEffectUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetMonsterUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetHintUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.GetGameStateUid(System.Boolean)">
            <summary></summary>
            <param name="allocate"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeRecordUid``1(Eamon.Framework.DataStorage.Generic.IDbTable{``0},System.Int64)">
            <summary></summary>
            <param name="table"></param>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeConfigUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeFilesetUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeCharacterUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeModuleUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeRoomUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeArtifactUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeEffectUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeMonsterUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeHintUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="M:Eamon.Framework.DataStorage.IDatabase.FreeGameStateUid(System.Int64)">
            <summary></summary>
            <param name="uid"></param>
        </member>
        <member name="T:Eamon.Framework.Delegates">
            <summary>
            A collection of C# delegate signatures.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Delegates.GetRecordListFunc">
            <summary>
            Queries the game database for a list of <see cref="T:Eamon.Framework.IGameBase">Record</see>s matching a criteria set.
            </summary>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Delegates.FilterRecordListFunc">
            <summary>
            Filters a given <see cref="T:Eamon.Framework.IGameBase">Record</see> list, returning all records matching a given name.
            </summary>
            <param name="recordList"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Delegates.RevealEmbeddedArtifactFunc">
            <summary>
            Reveals an embedded <see cref="T:Eamon.Framework.IArtifact">Artifact</see>, moving it into its containing <see cref="T:Eamon.Framework.IRoom">Room</see>
            and printing its <see cref="P:Eamon.Framework.IGameBase.Desc">Desc</see>ription if necessary.
            </summary>
            <param name="room"></param>
            <param name="artifact"></param>
        </member>
        <member name="T:Eamon.Framework.Helpers.Generic.IHelper`1">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.Record">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.Index">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.Buf">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.Buf01">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.EditRec">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.EditField">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.ShowDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.FieldDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.BufSize">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.FillChar">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.Offset">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.ErrorFieldName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.ErrorMessage">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.RecordType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.EditRecord">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.NewRecordUid">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.FullDetail">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.ResolveEffects">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.LookupMsg">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.NumberFields">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.ExcludeROFields">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.AddToListedNames">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Helpers.Generic.IHelper`1.ListNum">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.GetFieldName(System.String)">
            <summary></summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.GetFieldName(System.Int64)">
            <summary></summary>
            <param name="listNum"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.GetNameList(System.Func{System.String,System.Boolean})">
            <summary></summary>
            <param name="matchFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.GetPrintedName(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.GetName(System.String,System.Boolean)">
            <summary></summary>
            <param name="fieldName"></param>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.GetValue(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ValidateRecord">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ValidateField(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ValidateRecordAfterDatabaseLoaded">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ValidateFieldAfterDatabaseLoaded(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ValidateRecordInterdependencies">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ValidateFieldInterdependencies(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.PrintFieldDesc(System.String,System.Boolean,System.Boolean,Eamon.Framework.Primitive.Enums.FieldDesc)">
            <summary></summary>
            <param name="fieldName"></param>
            <param name="editRec"></param>
            <param name="editField"></param>
            <param name="fieldDesc"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.PrintFieldDesc(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ListRecord(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fullDetail"></param>
            <param name="showDesc"></param>
            <param name="resolveEffects"></param>
            <param name="lookupMsg"></param>
            <param name="numberFields"></param>
            <param name="excludeROFields"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ListRecord(System.Boolean)">
            <summary></summary>
            <param name="callClear"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ListField(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.ListErrorField">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.InputRecord(System.Boolean,Eamon.Framework.Primitive.Enums.FieldDesc)">
            <summary></summary>
            <param name="editRec"></param>
            <param name="fieldDesc"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.InputRecord(System.Boolean)">
            <summary></summary>
            <param name="callClear"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.InputField(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Eamon.Framework.Helpers.Generic.IHelper`1.Clear">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IArtifactHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.ICharacterHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IConfigHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IEffectHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IFilesetHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IGameStateHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IHintHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IModuleHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IMonsterHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Helpers.IRoomHelper">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.IArtifact">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.StateDesc">
            <summary>
            Gets or sets a description shown after this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s <see cref="P:Eamon.Framework.IGameBase.Name">Name</see> in
            various lists that indicates its state.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.IsCharOwned">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> is owned by the player character.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.IsPlural">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> represents a group of objects.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.IsListed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> should be displayed in
            various lists.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.PluralType">
            <summary>
            Gets or sets a value indicating how this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s singular <see cref="P:Eamon.Framework.IGameBase.Name">Name</see> is
            modified to produce its plural Name.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Value">
            <summary>
            Gets or sets the base value of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> in gold pieces.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Weight">
            <summary>
            Gets or sets the weight of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> in Gronds.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.RecursiveWeight">
            <summary>
            Gets the recursive weight of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> in Gronds.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Location">
            <summary>
            Gets or sets the location of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> in the game (typically a <see cref="T:Eamon.Framework.IRoom">Room</see>
            <see cref="P:Eamon.Framework.IGameBase.Uid">Uid</see> or a special code).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Type">
            <summary>
            Gets or sets the primary <see cref="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Type">Type</see> of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>, 
            a convenience to emulate Eamon Deluxe.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Field1">
            <summary>
            Gets or sets the primary <see cref="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field1">Field1</see> of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>,
            a convenience to emulate Eamon Deluxe.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Field2">
            <summary>
            Gets or sets the primary <see cref="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field2">Field2</see> of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>,
            a convenience to emulate Eamon Deluxe.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Field3">
            <summary>
            Gets or sets the primary <see cref="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field3">Field3</see> of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>,
            a convenience to emulate Eamon Deluxe.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Field4">
            <summary>
            Gets or sets the primary <see cref="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field4">Field4</see> of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>,
            a convenience to emulate Eamon Deluxe.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Field5">
            <summary>
            Gets or sets the primary <see cref="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field5">Field5</see> of this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>,
            a convenience to emulate Eamon Deluxe.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Gold">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Gold">Gold</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Treasure">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Treasure">Treasure</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Weapon">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Weapon">Weapon</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.MagicWeapon">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.MagicWeapon">MagicWeapon</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.GeneralWeapon">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding to 
            either <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Weapon">Weapon</see> or <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.MagicWeapon">MagicWeapon</see>; intended as a
            convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.InContainer">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.InContainer">InContainer</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.OnContainer">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.OnContainer">OnContainer</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.UnderContainer">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.UnderContainer">UnderContainer</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.BehindContainer">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.BehindContainer">BehindContainer</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.GeneralContainer">
            <summary>
            Gets the first found <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>
            corresponding to any of <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.InContainer">InContainer</see>, <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.OnContainer">OnContainer</see>, 
            <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.UnderContainer">UnderContainer</see> or <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.BehindContainer">BehindContainer</see>; 
            intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.LightSource">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.LightSource">LightSource</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Drinkable">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Drinkable">Drinkable</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Readable">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Readable">Readable</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.DoorGate">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.DoorGate">DoorGate</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Edible">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Edible">Edible</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.BoundMonster">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.BoundMonster">BoundMonster</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Wearable">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.Wearable">Wearable</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.DisguisedMonster">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.DisguisedMonster">DisguisedMonster</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.DeadBody">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.DeadBody">DeadBody</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.User1">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.User1">User1</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.User2">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.User2">User2</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.User3">
            <summary>
            Gets the <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> for this <see cref="T:Eamon.Framework.IArtifact">Artifact</see> corresponding
            to <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.User3">User3</see>; intended as a convenience.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IArtifact.Categories">
            <summary>
            Gets or sets an array of <see cref="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">ArtifactCategory</see> objects that define
            this <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s behavior in the game.
            </summary>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetCategory(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetSynonym(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetCategory(System.Int64,Eamon.Framework.Primitive.Classes.IArtifactCategory)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetSynonym(System.Int64,System.String)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByCharacter(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByMonster(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainer">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsWornByCharacter(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsWornByMonster(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsReadyableByCharacter">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsInRoom(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsEmbeddedInRoom(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToMonster(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToRoom(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsInLimbo(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByMonsterUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="monsterUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="containerUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsWornByMonsterUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="monsterUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsReadyableByMonsterUid(System.Int64)">
            <summary></summary>
            <param name="monsterUid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsInRoomUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="roomUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsEmbeddedInRoomUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="roomUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToCharacter(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToMonsterUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="monsterUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToRoomUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="roomUid"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByMonster(Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainer(Eamon.Framework.IArtifact,System.Boolean)">
            <summary></summary>
            <param name="container"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsWornByMonster(Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsReadyableByMonster(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsInRoom(Eamon.Framework.IRoom,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsEmbeddedInRoom(Eamon.Framework.IRoom,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToMonster(Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsCarriedByContainerContainerTypeExposedToRoom(Eamon.Framework.IRoom,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetCarriedByMonsterUid(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetCarriedByContainerUid(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetWornByMonsterUid(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetInRoomUid(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetEmbeddedInRoomUid(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetCarriedByMonster(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetCarriedByContainer(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetWornByMonster(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetInRoom(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetEmbeddedInRoom(System.Boolean)">
            <summary></summary>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetCarriedByContainerContainerType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetCarriedByCharacter">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetCarriedByMonsterUid(System.Int64)">
            <summary></summary>
            <param name="monsterUid"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetCarriedByContainerUid(System.Int64,Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerUid"></param>
            <param name="containerType"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetWornByCharacter">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetWornByMonsterUid(System.Int64)">
            <summary></summary>
            <param name="monsterUid"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetInRoomUid(System.Int64)">
            <summary></summary>
            <param name="roomUid"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetEmbeddedInRoomUid(System.Int64)">
            <summary></summary>
            <param name="roomUid"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetInLimbo">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetCarriedByMonster(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetCarriedByContainer(Eamon.Framework.IArtifact,Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="container"></param>
            <param name="containerType"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetWornByMonster(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetInRoom(Eamon.Framework.IRoom)">
            <summary></summary>
            <param name="room"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetEmbeddedInRoom(Eamon.Framework.IRoom)">
            <summary></summary>
            <param name="room"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsInRoomLit">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsEmbeddedInRoomLit">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsFieldStrength(System.Int64)">
            <summary></summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetFieldStrength(System.Int64)">
            <summary></summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsWeapon(Eamon.Framework.Primitive.Enums.Weapon)">
            <summary></summary>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsAttackable(Eamon.Framework.Primitive.Classes.IArtifactCategory@)">
            <summary></summary>
            <param name="ac"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsRequestable">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsUnmovable">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsUnmovable01">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsArmor">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsShield">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsDisguisedMonster">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsStateDescSideNotes">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsInContainerOpenedFromTop">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.IsDoorGateInObviousExitsList">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldAllowBlastSkillGains">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldExposeInContentsWhenClosed">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldExposeContentsToCharacter(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldExposeContentsToMonster(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldExposeContentsToRoom(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldAddContentsWhenCarried(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldAddContentsWhenWorn(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldAddContents(Eamon.Framework.IArtifact,Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldRevealContentsWhenMoved(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldRevealContentsWhenMovedIntoLimbo(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldShowContentsWhenExamined">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldShowContentsWhenOpened">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldShowVerboseNameContentsNameList">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.ShouldShowVerboseNameStateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetMaxContentsNameListCount(Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetContainerSomethingDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetContainerSomeStuffDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetDoorGateFleeDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetProvidingLightDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetReadyWeaponDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetBrokenDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetEmptyDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.EvalPlural``1(``0,``0)">
            <summary></summary>
            <param name="singularValue"></param>
            <param name="pluralValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.EvalInRoomLightLevel``1(``0,``0)">
            <summary></summary>
            <param name="darkValue"></param>
            <param name="lightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.EvalEmbeddedInRoomLightLevel``1(``0,``0)">
            <summary></summary>
            <param name="darkValue"></param>
            <param name="lightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetArtifactCategory(Eamon.Framework.Primitive.Enums.ArtifactType)">
            <summary></summary>
            <param name="artifactType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetArtifactCategory(Eamon.Framework.Primitive.Enums.ArtifactType[],System.Boolean)">
            <summary></summary>
            <param name="artifactTypes"></param>
            <param name="categoryArrayPrecedence"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetArtifactCategoryList(Eamon.Framework.Primitive.Enums.ArtifactType[])">
            <summary></summary>
            <param name="artifactTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.SetArtifactCategoryCount(System.Int64)">
            <summary></summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.AddStateDesc(System.String,System.Boolean)">
            <summary></summary>
            <param name="stateDesc"></param>
            <param name="dupAllowed"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.RemoveStateDesc(System.String)">
            <summary></summary>
            <param name="stateDesc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetContainedList(System.Func{Eamon.Framework.IArtifact,System.Boolean},Eamon.Framework.Primitive.Enums.ContainerType,System.Boolean)">
            <summary></summary>
            <param name="artifactFindFunc"></param>
            <param name="containerType"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetContainedList01(System.Collections.Generic.IList{Eamon.Framework.IArtifact},System.Func{Eamon.Framework.IArtifact,System.Boolean},Eamon.Framework.Primitive.Enums.ContainerType,System.Boolean)">
            <summary></summary>
            <param name="artifactList"></param>
            <param name="artifactFindFunc"></param>
            <param name="containerType"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetContainerInfo(System.Int64@,System.Int64@,Eamon.Framework.Primitive.Enums.ContainerType,System.Boolean)">
            <summary></summary>
            <param name="count"></param>
            <param name="weight"></param>
            <param name="containerType"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IArtifact.GetContainerContentsDesc(Eamon.Framework.Args.IRecordNameListArgs)">
            <summary></summary>
            <param name="recordNameListArgs"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.ICharacter">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.Gender">
            <summary>
            Gets or sets this <see cref="T:Eamon.Framework.ICharacter">Character</see>'s gender.
            </summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.Status">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.Stats">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.SpellAbilities">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.WeaponAbilities">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.ArmorExpertise">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.HeldGold">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.BankGold">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.ArmorClass">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.Armor">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.Shield">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.ICharacter.Weapons">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetStat(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetStat(Eamon.Framework.Primitive.Enums.Stat)">
            <summary></summary>
            <param name="stat"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetSpellAbility(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetSpellAbility(Eamon.Framework.Primitive.Enums.Spell)">
            <summary></summary>
            <param name="spell"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetWeaponAbility(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetWeaponAbility(Eamon.Framework.Primitive.Enums.Weapon)">
            <summary></summary>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetWeapon(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetSynonym(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetStat(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetStat(Eamon.Framework.Primitive.Enums.Stat,System.Int64)">
            <summary></summary>
            <param name="stat"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetSpellAbility(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetSpellAbility(Eamon.Framework.Primitive.Enums.Spell,System.Int64)">
            <summary></summary>
            <param name="spell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetWeaponAbility(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetWeaponAbility(Eamon.Framework.Primitive.Enums.Weapon,System.Int64)">
            <summary></summary>
            <param name="weapon"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetWeapon(System.Int64,Eamon.Framework.Primitive.Classes.ICharacterArtifact)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.SetSynonym(System.Int64,System.String)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ModStat(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ModStat(Eamon.Framework.Primitive.Enums.Stat,System.Int64)">
            <summary></summary>
            <param name="stat"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ModSpellAbility(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ModSpellAbility(Eamon.Framework.Primitive.Enums.Spell,System.Int64)">
            <summary></summary>
            <param name="spell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ModWeaponAbility(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ModWeaponAbility(Eamon.Framework.Primitive.Enums.Weapon,System.Int64)">
            <summary></summary>
            <param name="weapon"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetWeightCarryableGronds">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetWeightCarryableDos">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetIntellectBonusPct">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetCharmMonsterPct">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetMerchantAdjustedCharisma">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.IsArmorActive">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.IsShieldActive">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.IsWeaponActive(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.EvalGender``1(``0,``0,``0)">
            <summary>
            Evaluates this <see cref="T:Eamon.Framework.ICharacter">Character</see>'s <see cref="P:Eamon.Framework.ICharacter.Gender">Gender</see>, returning a value of type T.
            </summary>
            <param name="maleValue"></param>
            <param name="femaleValue"></param>
            <param name="neutralValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetFullInventoryWeight(System.Int64@,System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="weight"></param>
            <param name="characterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetBaseOddsToHit(Eamon.Framework.Primitive.Classes.ICharacterArtifact,System.Int64@)">
            <summary></summary>
            <param name="weapon"></param>
            <param name="baseOddsToHit"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetBaseOddsToHit(System.Int64,System.Int64@)">
            <summary></summary>
            <param name="index"></param>
            <param name="baseOddsToHit"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.GetWeaponCount(System.Int64@)">
            <summary></summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.ListWeapons(System.Text.StringBuilder,System.Boolean)">
            <summary></summary>
            <param name="buf"></param>
            <param name="capitalize"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.ICharacter.StripUniqueCharsFromWeaponNames">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.ICharacter.AddUniqueCharsToWeaponNames">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.ICharacter.CopyProperties(Eamon.Framework.ICharacter)">
            <summary></summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.IConfig">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.ShowDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.ResolveEffects">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.GenerateUids">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.FieldDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.WordWrapMargin">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdFilesetFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdCharacterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdModuleFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdRoomFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdArtifactFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEffectFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdMonsterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdHintFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.MhWorkDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.MhFilesetFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.MhCharacterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.MhEffectFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtFilesetFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtCharacterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtModuleFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtRoomFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtArtifactFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtEffectFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtMonsterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtHintFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.RtGameStateFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingFilesets">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingCharacters">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingModules">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingRooms">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingArtifacts">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingEffects">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingMonsters">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IConfig.DdEditingHints">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IConfig.LoadGameDatabase(System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="validate"></param>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IConfig.SaveGameDatabase(System.Boolean)">
            <summary></summary>
            <param name="printOutput"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IConfig.DeleteGameState(System.String,System.Boolean)">
            <summary></summary>
            <param name="configFileName"></param>
            <param name="startOver"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IConfig.CopyProperties(Eamon.Framework.IConfig)">
            <summary></summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.IEffect">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IEffect.BuildPrintedFullDesc(System.Text.StringBuilder)">
            <summary></summary>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.IFileset">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.WorkDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.PluginFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.ConfigFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.FilesetFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.CharacterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.ModuleFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.RoomFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.ArtifactFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.EffectFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.MonsterFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.HintFileName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IFileset.GameStateFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IFileset.DeleteFiles(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.IGameBase">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameBase.Uid">
            <summary>
            Gets or sets a unique Id that distinguishes this <see cref="T:Eamon.Framework.IGameBase">Record</see> from others of its type.
            </summary>
            <remarks>
            Every foundational Record Type in Eamon CS (e.g., <see cref="T:Eamon.Framework.IRoom">Room</see>, <see cref="T:Eamon.Framework.IArtifact">Artifact</see>, etc.)
            inherits this unique Id.  This allows the game designer to find and manipulate specific <see cref="T:Eamon.Framework.IGameBase">Record</see>s,
            either using tools like EamonDD or during gameplay.  The unique Id is a discrete sequence number starting at 1 for each
            inheriting Record Type, which means you can get (for example) both a Room and Artifact with the same unique Id.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IGameBase.IsUidRecycled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Eamon.Framework.IGameBase">Record</see>'s <see cref="P:Eamon.Framework.IGameBase.Uid">Uid</see> should be
            recycled (cached for reuse) when the Dispose method is called.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameBase.Name">
            <summary>
            Gets or sets the name of this <see cref="T:Eamon.Framework.IGameBase">Record</see> as shown in various lists or the Record's full description.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameBase.Desc">
            <summary>
            Gets or sets the detailed description of this <see cref="T:Eamon.Framework.IGameBase">Record</see> shown when the Record is 
            first <see cref="P:Eamon.Framework.IGameBase.Seen">Seen</see> or later examined.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameBase.Synonyms">
            <summary>
            Gets or sets a string array containing <see cref="P:Eamon.Framework.IGameBase.Name">Name</see> synonyms for this <see cref="T:Eamon.Framework.IGameBase">Record</see>
            (may be <c>null</c>).
            </summary>
            <remarks>
            In the case of <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s and <see cref="T:Eamon.Framework.IMonster">Monster</see>s, the game uses synonyms
            during parsing.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IGameBase.Seen">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Eamon.Framework.IGameBase">Record</see> has been seen by the player character.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameBase.ArticleType">
            <summary>
            Gets or sets a value indicating how this <see cref="T:Eamon.Framework.IGameBase">Record</see>'s <see cref="P:Eamon.Framework.IGameBase.Name">Name</see> is
            prefixed to produce its listed Name.
            </summary>
        </member>
        <member name="M:Eamon.Framework.IGameBase.SetParentReferences">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IGameBase.GetPluralName(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameBase.GetPluralName01">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameBase.GetDecoratedName(System.String,Eamon.Framework.Primitive.Enums.ArticleType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="fieldName"></param>
            <param name="articleType"></param>
            <param name="upshift"></param>
            <param name="showCharOwned"></param>
            <param name="showStateDesc"></param>
            <param name="showContents"></param>
            <param name="groupCountOne"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameBase.GetNoneName(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="upshift"></param>
            <param name="showCharOwned"></param>
            <param name="showStateDesc"></param>
            <param name="showContents"></param>
            <param name="groupCountOne"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameBase.GetArticleName(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="upshift"></param>
            <param name="showCharOwned"></param>
            <param name="showStateDesc"></param>
            <param name="showContents"></param>
            <param name="groupCountOne"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameBase.GetTheName(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="upshift"></param>
            <param name="showCharOwned"></param>
            <param name="showStateDesc"></param>
            <param name="showContents"></param>
            <param name="groupCountOne"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameBase.BuildPrintedFullDesc(System.Text.StringBuilder,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="buf"></param>
            <param name="showName"></param>
            <param name="showVerboseName"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.IGameState">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Ar">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for the armor being worn by
            the player character (may be 0 if none exists).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Cm">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IMonster">Monster</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> being used to represent the
            player character.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Ls">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for the currently active
            <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.LightSource">LightSource</see> (may be 0 if none exists).
            </summary>
            <remarks>
            Here are some basics about the <see cref="F:Eamon.Framework.Primitive.Enums.ArtifactType.LightSource">LightSource </see><see cref="T:Eamon.Framework.Primitive.Enums.ArtifactType">ArtifactType</see>
            in Eamon CS.  Like Eamon Deluxe, it directly supports only one light source active at a time, and it must be in the <see cref="T:Eamon.Framework.IRoom">Room</see>
            with the player.  When the LightSource is active, its <see cref="P:Eamon.Framework.IGameBase.Uid">Uid</see> is stored in <see cref="P:Eamon.Framework.IGameState.Ls">Ls</see>; if
            no LightSource is active, this property will be 0.  Furthermore, if the LightSource is portable, it must be carried by the player
            when activated as well (the game automatically causes the player character to pick it up).  If a portable LightSource is dropped,
            it will go out; if the LightSource is not portable, it will go out when the player leaves the room.  If one LightSource is lit when
            another is active, the currently lit LightSource will go out.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IGameState.Ro">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IRoom">Room</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for the player character's current
            location (may be 0 if in limbo).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.R2">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IRoom">Room</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for the location the player character
            is entering (during a movement operation).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.R3">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IRoom">Room</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for the location the player character
            is exiting (during a movement operation).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Sh">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for the shield being worn by
            the player character (may be 0 if none exists).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Af">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Die">
            <summary>
            Gets or sets a value indicating the player character death status (-1=Quitting Game; 0=Alive; 1=Dead).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Speed">
            <summary>
            Gets or sets the number of rounds remaining before the player character's <see cref="F:Eamon.Framework.Primitive.Enums.Spell.Speed">Speed</see> spell expires.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Vr">
            <summary>
            Gets or sets a value indicating whether <see cref="T:Eamon.Framework.IRoom">Room</see>s should always be printed verbosely.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Vm">
            <summary>
            Gets or sets a value indicating whether <see cref="T:Eamon.Framework.IMonster">Monster</see>s should always be printed verbosely.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Va">
            <summary>
            Gets or sets a value indicating whether <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s should always be printed verbosely.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Vn">
            <summary>
            Gets or sets a value indicating whether names for <see cref="T:Eamon.Framework.IMonster">Monster</see>s and
            <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s should always be printed verbosely.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.MatureContent">
            <summary>
            Gets or sets a value indicating whether mature content should be allowed during gameplay.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.EnhancedParser">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.IobjPronounAffinity">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.ShowPronounChanges">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.ShowFulfillMessages">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.CurrTurn">
            <summary>
            Gets or sets the current turn in the game; this is incremented after player command parsing but before execution.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.PauseCombatMs">
            <summary>
            Gets or sets the number of milliseconds to pause between actions during a combat round.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.PauseCombatActions">
            <summary>
            Gets or sets the number of actions to pause between during a combat round.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.ImportedArtUidsIdx">
            <summary>
            Gets or sets a value that indexes <see cref="P:Eamon.Framework.IGameState.ImportedArtUids">ImportedArtUids</see> and indicates the next
            available element to store an imported <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see>.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.UsedWpnIdx">
            <summary>
            Gets or sets a value that indexes <see cref="P:Eamon.Framework.IGameState.HeldWpnUids">HeldWpnUids</see> and indicates which weapon in that
            array is being used by the player in the game.  (Only used in the beginner's adventures).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.Sa">
            <summary>
            Gets or sets an array of player character <see cref="T:Eamon.Framework.Primitive.Enums.Spell">Spell</see> abilities that is updated during gameplay.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IGameState.ImportedArtUids">
            <summary>
            Gets or sets an array of <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see>s corresponding
            to the Artifacts brought into the game by the player (armor, shield and weapons).
            </summary>
            <remarks>
            The <see cref="P:Eamon.Framework.IGameState.ImportedArtUidsIdx">ImportedArtUidsIdx</see> property indicates the number of
            <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see>s stored in the array (and also the next
            element available to store another).
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IGameState.HeldWpnUids">
            <summary>
            Gets or sets an array of <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see>s corresponding
            to the weapons brought into the game by the player.  (Only used in the beginner's adventures).
            </summary>
            <remarks>
            All but one of these weapons is put in limbo; the <see cref="P:Eamon.Framework.IGameState.UsedWpnIdx">UsedWpnIdx</see> property indicates which
            weapon is being used by the player in the game.  All weapons are returned to the player when the game is exited.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IGameState.BeforePrintPlayerRoomEventHeap">
            <summary></summary>
            <remarks></remarks>
        </member>
        <member name="P:Eamon.Framework.IGameState.AfterPrintPlayerRoomEventHeap">
            <summary></summary>
            <remarks></remarks>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetNBTL(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetNBTL(Eamon.Framework.Primitive.Enums.Friendliness)">
            <summary></summary>
            <param name="friendliness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetDTTL(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetDTTL(Eamon.Framework.Primitive.Enums.Friendliness)">
            <summary></summary>
            <param name="friendliness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetSa(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetSa(Eamon.Framework.Primitive.Enums.Spell)">
            <summary></summary>
            <param name="spell"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetImportedArtUid(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.GetHeldWpnUid(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IGameState.SetSa(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IGameState.SetSa(Eamon.Framework.Primitive.Enums.Spell,System.Int64)">
            <summary></summary>
            <param name="spell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IGameState.SetImportedArtUid(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IGameState.SetHeldWpnUid(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IGameState.ModSa(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IGameState.ModSa(Eamon.Framework.Primitive.Enums.Spell,System.Int64)">
            <summary></summary>
            <param name="spell"></param>
            <param name="value"></param>
        </member>
        <member name="T:Eamon.Framework.IHint">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IHint.Active">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IHint.Question">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IHint.NumAnswers">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IHint.Answers">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IHint.GetAnswer(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IHint.SetAnswer(System.Int64,System.String)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="T:Eamon.Framework.IModule">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IModule.Author">
            <summary>
            Gets or sets the name(s) of the author(s) for this adventure.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.VolLabel">
            <summary>
            Gets or sets the volume label for this adventure; this is a code consisting of the author(s) initials and
            an author-specific sequence number, e.g. MP-001.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.SerialNum">
            <summary>
            Gets or sets the serial number for this adventure; this is a sequence number that spans authors and indicates
            the number of games in Eamon CS, e.g. 013.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.LastMod">
            <summary>
            Gets or sets the last date this adventure was modified; this is updated by the EamonDD game editor.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.IntroStory">
            <summary>
            Gets or sets an <see cref="T:Eamon.Framework.IEffect">Effect</see> <see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> that corresponds to the
            introduction story for this adventure.
            </summary>
            <remarks>
            The <see cref="T:Eamon.Framework.IEffect">Effect</see> referenced by this value will frequently be the initial prose in a set of
            Events chained together using the typical Eamon CS mechanism.  You can look at any existing game for an example
            of this.  The value may also be zero (0), in which case the adventure has no introduction story.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IModule.NumDirs">
            <summary>
            Gets or sets the number of directional links for <see cref="T:Eamon.Framework.IRoom">Room</see>s in this adventure.  Valid values
            are 6 or 12, corresponding to compass <see cref="T:Eamon.Framework.Primitive.Enums.Direction">Direction</see>s.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.NumRooms">
            <summary>
            Gets or sets the number of <see cref="T:Eamon.Framework.IRoom">Room</see>s in this adventure.  This value is kept in sync with
            the corresponding ROOMS.DAT file.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.NumArtifacts">
            <summary>
            Gets or sets the number of <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s in this adventure.  This value is kept in sync with
            the corresponding ARTIFACTS.DAT file.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.NumEffects">
            <summary>
            Gets or sets the number of <see cref="T:Eamon.Framework.IEffect">Effect</see>s in this adventure.  This value is kept in sync with
            the corresponding EFFECTS.DAT file.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.NumMonsters">
            <summary>
            Gets or sets the number of <see cref="T:Eamon.Framework.IMonster">Monster</see>s in this adventure.  This value is kept in sync with
            the corresponding MONSTERS.DAT file.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IModule.NumHints">
            <summary>
            Gets or sets the number of <see cref="T:Eamon.Framework.IHint">Hint</see>s in this adventure.  This value is kept in sync with
            the corresponding HINTS.DAT file.
            </summary>
        </member>
        <member name="M:Eamon.Framework.IModule.PrintInfo">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.IMonster">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.StateDesc">
            <summary>
            Gets or sets a description shown after this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s <see cref="P:Eamon.Framework.IGameBase.Name">Name</see> in
            various lists that indicates its state.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.IsListed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Eamon.Framework.IMonster">Monster</see> should be displayed in
            various lists.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.PluralType">
            <summary>
            Gets or sets a value indicating how this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s singular <see cref="P:Eamon.Framework.IGameBase.Name">Name</see> is
            modified to produce its plural Name.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Hardiness">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Agility">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.GroupCount">
            <summary>
            Gets or sets the original number of members in this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s group at the beginning of the game (will
            be 1 for individuals).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.AttackCount">
            <summary>
            Gets or sets the number of attacks each member in this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s group can make every combat round.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Courage">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Location">
            <summary>
            Gets or sets the location of this <see cref="T:Eamon.Framework.IMonster">Monster</see> in the game (typically a <see cref="T:Eamon.Framework.IRoom">Room</see>
            <see cref="P:Eamon.Framework.IGameBase.Uid">Uid</see>).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.CombatCode">
            <summary>
            Gets or sets a value indicating this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s behavior when in combat.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Armor">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Weapon">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.NwDice">
            <summary>
            Gets or sets the hit dice done per attack, for <see cref="T:Eamon.Framework.IMonster">Monster</see>s that can use natural attacks (based
            on <see cref="P:Eamon.Framework.IMonster.CombatCode">CombatCode</see>).
            </summary>
            <remarks>
            In the XdY nomenclature used by roleplaying games, this is X.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IMonster.NwSides">
            <summary>
            Gets or sets the hit dice sides done per attack, for <see cref="T:Eamon.Framework.IMonster">Monster</see>s that can use natural attacks (based
            on <see cref="P:Eamon.Framework.IMonster.CombatCode">CombatCode</see>).
            </summary>
            <remarks>
            In the XdY nomenclature used by roleplaying games, this is Y.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IMonster.DeadBody">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> for this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s
            dead body (may be 0 if none exists).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Friendliness">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Gender">
            <summary>
            Gets or sets this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s gender.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.InitGroupCount">
            <summary>
            Gets or sets the initial number of members in this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s group at the beginning of the current
            combat round (will be 1 for individuals).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.CurrGroupCount">
            <summary>
            Gets or sets the current number of members in this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s group (will be 1 for individuals).
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Reaction">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.DmgTaken">
            <summary>
            Gets or sets the number of hit points of damage taken by this <see cref="T:Eamon.Framework.IMonster">Monster</see>, either in combat or otherwise.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Field1">
            <summary>
            Gets or sets a value that is unused by Eamon CS, but provided for game developer usage.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Field2">
            <summary>
            Gets or sets a value that is unused by Eamon CS, but provided for game developer usage.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IMonster.Spells">
            <summary>
            Gets or sets an array of <see cref="T:Eamon.Framework.Primitive.Classes.IMonsterSpell">MonsterSpell</see> objects that define
            this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s spellcasting ability (NPC only).
            </summary>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsDead">
            <summary>
            Indicates whether this <see cref="T:Eamon.Framework.IMonster">Monster</see> is dead.
            </summary>
            <remarks>
            By default, to determine dead status the system compares <see cref="P:Eamon.Framework.IMonster.DmgTaken">DmgTaken</see> with
            <see cref="P:Eamon.Framework.IMonster.Hardiness">Hardiness</see>.
            </remarks>
            <returns>If so then <c>true</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsCarryingWeapon">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsWeaponless(System.Boolean)">
            <summary></summary>
            <param name="includeWeaponFumble"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.HasDeadBody">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.HasWornInventory">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.HasCarriedInventory">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.HasHumanNaturalAttackDescs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsInRoom">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsInLimbo">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsInRoomUid(System.Int64)">
            <summary></summary>
            <param name="roomUid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsInRoom(Eamon.Framework.IRoom)">
            <summary></summary>
            <param name="room"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsAttackable(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CanMoveToRoom(System.Boolean)">
            <summary></summary>
            <param name="fleeing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CanMoveToRoomUid(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="roomUid"></param>
            <param name="fleeing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CanMoveToRoom(Eamon.Framework.IRoom,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="fleeing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CanMoveInDirection(Eamon.Framework.Primitive.Enums.Direction,System.Boolean)">
            <summary></summary>
            <param name="dir"></param>
            <param name="fleeing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CanAttackWithMultipleWeapons">
            <summary>
            Indicates whether this <see cref="T:Eamon.Framework.IMonster">Monster</see> is allowed to attack with multiple <see cref="T:Eamon.Framework.IArtifact">Artifact</see> weapons
            in a single combat round, if certain other conditions are met.
            </summary>
            <remarks>
            This method allows support for <see cref="T:Eamon.Framework.IMonster">Monster</see>s that can multi-attack and also multi-wield.  The conditions that need to
            be met to trigger this behavior include:  the Monster is an individual, it is armed and carrying more than one <see cref="T:Eamon.Framework.IArtifact">Artifact</see>
            weapon and this method must return <c>true</c>.  By default, it returns <c>false</c>.
            </remarks>
            <returns>If so then <c>true</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetCarryingWeaponUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetDeadBodyUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetInRoomUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetInRoom">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.SetInRoomUid(System.Int64)">
            <summary></summary>
            <param name="roomUid"></param>
        </member>
        <member name="M:Eamon.Framework.IMonster.SetInLimbo">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.IMonster.SetInRoom(Eamon.Framework.IRoom)">
            <summary></summary>
            <param name="room"></param>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsInRoomLit">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldFleeRoom">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldCastSpell(Eamon.Framework.Primitive.Enums.Spell@,Eamon.Framework.IGameBase@)">
            <summary></summary>
            <param name="spellCast"></param>
            <param name="spellTarget"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldReadyWeapon">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldShowContentsWhenExamined">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldShowHealthStatusWhenExamined">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldShowHealthStatusWhenInventoried">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldShowVerboseNameStateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldProcessInGameLoop">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldRefuseToAcceptGold">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldRefuseToAcceptGift(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ShouldRefuseToAcceptDeadBody(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CheckNBTLHostility">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.CheckCourage">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.EvalReaction``1(``0,``0,``0)">
            <summary>
            Evaluates this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s <see cref="P:Eamon.Framework.IMonster.Reaction">Reaction</see>, returning a value of type T.
            </summary>
            <param name="enemyValue"></param>
            <param name="neutralValue"></param>
            <param name="friendValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.EvalGender``1(``0,``0,``0)">
            <summary>
            Evaluates this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s <see cref="P:Eamon.Framework.IMonster.Gender">Gender</see>, returning a value of type T.
            </summary>
            <param name="maleValue"></param>
            <param name="femaleValue"></param>
            <param name="neutralValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.EvalPlural``1(``0,``0)">
            <summary>
            Evaluates this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s <see cref="P:Eamon.Framework.IMonster.CurrGroupCount">CurrGroupCount</see>, returning a value of type T.
            </summary>
            <param name="singularValue"></param>
            <param name="pluralValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.EvalInRoomLightLevel``1(``0,``0)">
            <summary>
            Evaluates the <see cref="P:Eamon.Framework.IRoom.LightLvl">LightLvl</see> of this <see cref="T:Eamon.Framework.IMonster">Monster</see>'s <see cref="T:Eamon.Framework.IRoom">Room</see> (as
            determined by its <see cref="P:Eamon.Framework.IMonster.Location">Location</see>), returning a value of type T.
            </summary>
            <param name="darkValue"></param>
            <param name="lightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.ResolveReaction(System.Int64)">
            <summary></summary>
            <param name="charisma"></param>
        </member>
        <member name="M:Eamon.Framework.IMonster.ResolveReaction(Eamon.Framework.ICharacter)">
            <summary></summary>
            <param name="character"></param>
        </member>
        <member name="M:Eamon.Framework.IMonster.CalculateGiftFriendliness(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="value"></param>
            <param name="isArtifactValue"></param>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsCharacterMonster">
            <summary>
            Indicates whether this <see cref="T:Eamon.Framework.IMonster">Monster</see> represents the player character.
            </summary>
            <returns>If so then <c>true</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.IsStateDescSideNotes">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetWeightCarryableGronds">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetFleeingMemberCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetMaxMemberActionCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetMaxMemberAttackCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetMonsterSpell(Eamon.Framework.Primitive.Enums.Spell)">
            <summary></summary>
            <param name="spell"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetCarriedList(System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetWornList(System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetContainedList(System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.EnforceFullInventoryWeightLimits(System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetFullInventoryWeight(System.Int64@,System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="weight"></param>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.AddHealthStatus(System.Text.StringBuilder,System.Boolean)">
            <summary></summary>
            <param name="buf"></param>
            <param name="addNewLine"></param>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetWeaponAttackDescs(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetHumanAttackDescs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetNaturalAttackDescs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetAttackDescString(Eamon.Framework.IRoom,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="room"></param>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetWeaponMissDescs(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetNaturalMissDescs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetMissDescString(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetArmorDescString">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetCantFindExitDescString(Eamon.Framework.IRoom,System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="monsterName"></param>
            <param name="isPlural"></param>
            <param name="fleeing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetMembersExitRoomDescString(Eamon.Framework.IRoom,System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="monsterName"></param>
            <param name="isPlural"></param>
            <param name="fleeing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetExitRoomDescString(Eamon.Framework.IRoom,System.String,System.Boolean,System.Boolean,Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="room"></param>
            <param name="monsterName"></param>
            <param name="isPlural"></param>
            <param name="fleeing"></param>
            <param name="exitDirection"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IMonster.GetEnterRoomDescString(Eamon.Framework.IRoom,System.String,System.Boolean,System.Boolean,Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="room"></param>
            <param name="monsterName"></param>
            <param name="isPlural"></param>
            <param name="fleeing"></param>
            <param name="enterDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.IRoom">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.IRoom.LightLvl">
            <summary>
            Gets or sets a value indicating the amount of light in this <see cref="T:Eamon.Framework.IRoom">Room</see>.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IRoom.Type">
            <summary>
            Gets or sets a value indicating this <see cref="T:Eamon.Framework.IRoom">Room</see>'s general type.
            </summary>
        </member>
        <member name="P:Eamon.Framework.IRoom.Zone">
            <summary>
            Gets or sets a value that is unused by Eamon CS, but indicates the zone of this <see cref="T:Eamon.Framework.IRoom">Room</see>.
            </summary>
            <remarks>
            This value is provided to the game developer to allow sets of <see cref="T:Eamon.Framework.IRoom">Room</see>s to be arbitrarily grouped.
            Then the groups of Rooms can be processed further by the game code if necessary.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.IRoom.Dirs">
            <summary>
            Gets or sets an array of <see cref="T:Eamon.Framework.IRoom">Room</see> exit links, each element corresponding to one <see cref="T:Eamon.Framework.Primitive.Enums.Direction">Direction</see>.
            </summary>
            <remarks>
            The elements of this array can be manipulated during game play, but you should never do so directly.  Instead, use the
            <see cref="M:Eamon.Framework.IRoom.GetDir(Eamon.Framework.Primitive.Enums.Direction)"/> and <see cref="M:Eamon.Framework.IRoom.SetDir(Eamon.Framework.Primitive.Enums.Direction,System.Int64)"/> methods.  The 0'th element is unused.
            </remarks>
            <seealso cref="M:Eamon.Framework.IRoom.GetDir(System.Int64)"/>
            <seealso cref="M:Eamon.Framework.IRoom.SetDir(System.Int64,System.Int64)"/>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetDir(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetDir(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDir(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDir(Eamon.Framework.Primitive.Enums.Direction,System.Int64)">
            <summary></summary>
            <param name="dir"></param>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsLit">
            <summary>
            Indicates whether this <see cref="T:Eamon.Framework.IRoom">Room</see> is lit.
            </summary>
            <returns>If <see cref="P:Eamon.Framework.IRoom.LightLvl"/> == <see cref="F:Eamon.Framework.Primitive.Enums.LightLevel.Light"/> then <c>true</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionInvalid(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionInvalid(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionRoom(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionRoom(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionRoom01(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionRoom01(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionExit(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionExit(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionDoor(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionDoor(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionSpecial(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="index"></param>
            <param name="includeExit"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionSpecial(Eamon.Framework.Primitive.Enums.Direction,System.Boolean)">
            <summary></summary>
            <param name="dir"></param>
            <param name="includeExit"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionInObviousExitsList(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsDirectionInObviousExitsList(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetDirectionDoorUid(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetDirectionDoorUid(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetDirectionDoor(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetDirectionDoor(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDirectionExit(System.Int64)">
            <summary></summary>
            <param name="index"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDirectionExit(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDirectionDoorUid(System.Int64,System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <param name="artifactUid"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDirectionDoorUid(Eamon.Framework.Primitive.Enums.Direction,System.Int64)">
            <summary></summary>
            <param name="dir"></param>
            <param name="artifactUid"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDirectionDoor(System.Int64,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="index"></param>
            <param name="artifact"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.SetDirectionDoor(Eamon.Framework.Primitive.Enums.Direction,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="dir"></param>
            <param name="artifact"></param>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetYouAlsoSee(System.Boolean,System.Collections.Generic.IList{Eamon.Framework.IMonster},System.Collections.Generic.IList{Eamon.Framework.IArtifact},System.Collections.Generic.IList{Eamon.Framework.IGameBase})">
            <summary></summary>
            <param name="showDesc"></param>
            <param name="monsterList"></param>
            <param name="artifactList"></param>
            <param name="recordList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetObviousExits">
            <summary>
            Gets this <see cref="T:Eamon.Framework.IRoom">Room</see>'s obvious exits prefix string, based on its <see cref="P:Eamon.Framework.IRoom.Type">Type</see>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsMonsterListedInRoom(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.IsArtifactListedInRoom(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.EvalLightLevel``1(``0,``0)">
            <summary>
            Evaluates this <see cref="T:Eamon.Framework.IRoom">Room</see>'s <see cref="P:Eamon.Framework.IRoom.LightLvl">LightLvl</see>, returning a value of type T.
            </summary>
            <param name="darkValue"></param>
            <param name="lightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.EvalRoomType``1(``0,``0)">
            <summary>
            Evaluates this <see cref="T:Eamon.Framework.IRoom">Room</see>'s <see cref="P:Eamon.Framework.IRoom.Type">Type</see>, returning a value of type T.
            </summary>
            <param name="indoorsValue"></param>
            <param name="outdoorsValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetTakeableList(System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="roomFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetEmbeddedList(System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="roomFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetContainedList(System.Func{Eamon.Framework.IGameBase,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean)">
            <summary></summary>
            <param name="roomFindFunc"></param>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.GetExitList(System.Text.StringBuilder,System.Func{System.String,System.String},System.Boolean)">
            <summary></summary>
            <param name="buf"></param>
            <param name="modFunc"></param>
            <param name="useNames"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.BuildPrintedFullDesc(System.Text.StringBuilder,System.Func{Eamon.Framework.IMonster,System.Boolean},System.Func{Eamon.Framework.IArtifact,System.Boolean},System.Boolean,System.Boolean,System.Boolean,System.Boolean,Eamon.Framework.Args.IRecordNameListArgs)">
            <summary></summary>
            <param name="buf"></param>
            <param name="monsterFindFunc"></param>
            <param name="artifactFindFunc"></param>
            <param name="verboseRoomDesc"></param>
            <param name="verboseMonsterDesc"></param>
            <param name="verboseArtifactDesc"></param>
            <param name="verboseNames"></param>
            <param name="recordNameListArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.IRoom.BuildPrintedTooDarkToSeeDesc(System.Text.StringBuilder)">
            <summary></summary>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Menus.IMenu">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Menus.IMenu.Title">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Menus.IMenu.Buf">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Menus.IMenu.MenuItemList">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Menus.IMenu.IsCharMenuItem(System.Char)">
            <summary></summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Menus.IMenu.PrintSubtitle">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Menus.IMenu.ShouldBreakMenuLoop">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Menus.IMenu.Startup">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Menus.IMenu.Shutdown">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Menus.IMenu.Execute">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Menus.IMenuItem">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Menus.IMenuItem.SelectChar">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Menus.IMenuItem.LineText">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Menus.IMenuItem.SubMenu">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Plugin.IEngine">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CommandSepTokens">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.PronounTokens">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ToughDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CourageDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ArtNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ArtStateDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ArtDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CharNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CharArtNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CharArtDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.EffDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.FsNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.FsFileNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.HntQuestionLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.HntAnswerLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ModNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ModDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ModAuthorLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ModVolLabelLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ModSerialNumLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MonNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MonStateDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MonDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RmNameLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RmDescLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.AxePrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BowPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MacePrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.SpearPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.SwordPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ShieldPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.LeatherArmorPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ChainMailPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.PlateMailPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BlastPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.HealPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.SpeedPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.PowerPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RecallPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.StatGainPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.WeaponTrainingPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ArmorTrainingPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.SpellTrainingPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.InfoBoothPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.FountainPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.NumDatabases">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.NumRulesetVersions">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.NumArtifactCategories">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BufSize">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BufSize01">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BufSize02">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BufSize03">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ResolveEffectRegexPattern">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ResolveUidMacroRegexPattern">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ValidWorkDirRegexPattern">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CoreLibRegexPattern">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MscorlibRegexPattern">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CoreLibName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MscorlibName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RecIdepErrorFmtStr">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.AndroidAdventuresDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.AdventuresDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.QuickLaunchDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.DefaultWorkDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ProcessMutexName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.EamonDesktopSlnFile">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.StackTraceFile">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ProgVersion">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.InfiniteDrinkableEdible">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.DirectionExit">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.LimboLocation">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MinWeaponComplexity">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MaxWeaponComplexity">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MinGoldValue">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MaxGoldValue">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MaxPathLen">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MaxRecursionLevel">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.WindowWidth">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.WindowHeight">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BufferWidth">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.BufferHeight">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RightMargin">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.NumRows">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">
            <summary>
            Gets or sets the Dictionary that stores interface to class mappings as Key/Value pairs, used for dependency injection.
            </summary>
            <remarks>
            This is the heart of the customized dependency injection architecture used by Eamon CS.  If you've ever wondered
            how the system seems to "know" which class needs to be instantiated to make any game work, it is all based on the
            contents of this Dictionary.  When the system calls <see cref="M:Eamon.Framework.Plugin.IEngine.CreateInstance``1(System.Action{``0})">CreateInstance</see>,
            this Dictionary is consulted and the concrete class corresponding to the provided interface is created.  If you use the
            debugger to step through a game while its running, looking in this Dictionary at the Key/Value pairs is very enlightening.
            Another piece to this puzzle is how the Dictionary itself is loaded during program bootstrap, and this information will be
            provided in the comments for <see cref="M:Eamon.Framework.Plugin.IEngine.LoadPluginClassMappings">LoadPluginClassMappings</see> and 
            <see cref="M:Eamon.Framework.Plugin.IEngine.LoadPluginClassMappings01(System.Reflection.Assembly)">LoadPluginClassMappings01</see>.
            <para>
            Side note:  Research was done on dependency injection toolkits (like Ninject, etc.), but that avenue was avoided because it
            would have introduced unnecessary dependencies for the project.  There don't seem to be any frameworks that fit what was
            done in Eamon CS, so this dependency injection architecture is outside typical patterns.
            </para>
            </remarks>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.In">
            <summary>
            Gets or sets the text reader that accepts user input from the console window.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Out">
            <summary>
            Gets or sets the text writer that prints text to the console window.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Error">
            <summary>
            Gets or sets the text writer that prints error messages to the console window.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Mutex">
            <summary>
            Gets or sets a mutex (mutual exclusion lock) that ensures only one Eamon CS process runs in a given operating system at a time.
            </summary>
            <remarks>
            Eamon CS loads its datafiles into an in-memory database, requiring the use of a global system mutex to prevent datafile corruption.
            This mutex prevents multiple Eamon CS processes from running simultaneously, even if they are run from different repositories on
            the same computer.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.TransferProtocol">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Directory">
            <summary>
            Gets or sets the platform-independent Directory manager that Eamon CS relies on for all directory-related operations.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.File">
            <summary>
            Gets or sets the platform-independent File manager that Eamon CS relies on for all file-related operations.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Path">
            <summary>
            Gets or sets the platform-independent file system Path manager that Eamon CS relies on for all file system path-related operations.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.SharpSerializer">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Thread">
            <summary>
            Gets or sets the platform-independent Thread manager that Eamon CS relies on for all thread-related operations.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CloneStream">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MutatePropertyCounter">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.WorkDir">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.FilePrefix">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RulesetVersion">
            <summary>
            Gets a value indicating which Eamon ruleset applies to the current game.
            </summary>
            <remarks>
            Earlier rulesets of Eamon gave a different "vibe" to the gameplay experience, so a means to support them was introduced.  Currently supported
            rulesets include 5 for DDD5 and 0 for Eamon Deluxe.  The Temple of Ngurct is the only game using DDD5 at the time of this writing.  Recent
            enhancements allow a game to change rulesets dynamically at runtime.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.EnableMutateProperties">
            <summary>
            Gets a value indicating whether "mutating properties" (those that are dynamically calculated) should be enabled.
            </summary>
            <remarks>
            Examples of mutating properties include <see cref="T:Eamon.Framework.IMonster">Monster</see> <see cref="P:Eamon.Framework.IMonster.Courage"> Courage</see> and
            <see cref="T:Eamon.Framework.IArtifact">Artifact</see> <see cref="P:Eamon.Framework.IArtifact.Location"> Location</see>, but there are more scattered through the various games as
            well.  You will note that both the getter and setter of a property can mutate if necessary.  In general, you want this behavior enabled during
            gameplay so properties can respond to changes in game state, but never when the <see cref="P:Eamon.Framework.Plugin.IEngine.SharpSerializer">SharpSerializer</see> is running
            during datafile serialization or deserialization because it can lead to corrupted values.  This value should be checked in all mutating
            properties and if it is <c>false</c> they should disable complex calculations and return a simple base value.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.EnableStdio">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.EnableNegativeRoomUidLinks">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.IgnoreMutex">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:Eamon.Framework.Plugin.IEngine.Mutex">Mutex</see> should be ignored, allowing unlimited Eamon CS processes
            to run simultaneously.
            </summary>
            <remarks>
            This should only be done when there is no chance of datafile corruption.  For example, running processes in different repositories
            that always access different datafiles.
            </remarks>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.DisableValidation">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RunGameEditor">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.DeleteGameStateFromMainHall">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ConvertDatafileToMscorlib">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.LoadPortabilityClassMappings">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Buf">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Database">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RevealContentRoom">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RevealContentMonster">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RevealContentArtifactList">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RevealContentFuncList">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RevealContentCounter">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.LineSep">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.LineWrapUserInput">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CursorPosition">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CFGDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.FSDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.CHRDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MODDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.ADB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.EDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.HDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.GSDB">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.MacroFuncs">
            <summary>
            Gets or sets a collection of functions used to resolve macros embedded in <see cref="P:Eamon.Framework.IGameBase.Desc">Desc</see>, 
            <see cref="T:Eamon.Framework.IArtifact">Artifact</see><see cref="P:Eamon.Framework.IArtifact.StateDesc"> StateDesc</see> and <see cref="T:Eamon.Framework.IMonster">Monster</see>
            <see cref="P:Eamon.Framework.IMonster.StateDesc"> StateDesc</see> properties.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.RevealContainerContentsFunc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Preps">
            <summary>
            Gets or sets an array of sentence prepositions (e.g., "to", "from", "inside", etc).
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.Articles">
            <summary>
            Gets or sets an array of sentence articles (e.g., "a", "some", "the", etc).
            </summary>
        </member>
        <member name="P:Eamon.Framework.Plugin.IEngine.UnknownName">
            <summary>
            Gets or sets a generic string representing an unknown name (e.g., "???").
            </summary>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.HandleException(System.Exception,System.String,System.String)">
            <summary></summary>
            <param name="ex"></param>
            <param name="stackTraceFile"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ResolvePortabilityClassMappings">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ProcessArgv(System.String[])">
            <summary></summary>
            <param name="args"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.LoadPluginClassMappings">
            <summary>
            Loads the <see cref="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">ClassMappingsDictionary</see> with all interface to class mapping Key/Value
            pairs necessary to allow the currently loaded Eamon CS plugin to run.
            </summary>
            <remarks>
            The mechanism used to accomplish this is easy to understand but somewhat hard to describe without providing a concrete
            example and referring you to other source code files to inspect their contents.  Let's take a look at the game Wrenhold's
            Secret Vigil.  Please inspect the following files in the order listed (they are also executed in this order by Eamon CS -
            a simplified call stack):
            <list type="bullet">
            <item>Adventures\WrenholdsSecretVigil\Game\Plugin\Engine.cs</item>
            <item>System\EamonRT\Game\Plugin\Engine.cs</item>
            <item>System\EamonDD\Game\Plugin\Engine.cs</item>
            <item>System\Eamon\Game\Plugin\Engine.cs</item>
            </list>
            All of these files contain LoadPluginClassMappings.  In the top three files, it is an override that calls into the level
            below by invoking base.LoadPluginClassMappings.  So it immediately drills down to the bottom of the stack (to the Eamon
            library).
            <para>
            Then things get interesting.  The lowest level calls
            <see cref="M:Eamon.Framework.Plugin.IEngine.LoadPluginClassMappings01(System.Reflection.Assembly)">LoadPluginClassMappings01</see> which probes the current Assembly (the
            Eamon library) using Reflection, looking for classes adorned with the
            <see cref="T:Eamon.Game.Attributes.ClassMappingsAttribute">ClassMappings</see> attribute.  It then adds Key/Value pairs for all
            found classes (along with their matching interfaces) to the 
            <see cref="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">ClassMappingsDictionary</see>.  At this point, the call stack unwinds to the next
            higher level (EamonDD), and the overridden LoadPluginClassMappings method makes the same call to
            LoadPluginClassMappings01 which performs the same function, only this time it probes EamonDD for classes.  This process
            repeats until the stack is fully unwound and the original call to LoadPluginClassMappings (in Program.cs) returns.
            </para>
            <para>
            At each level, all newly discovered class/interface pairs are added immediately to the ClassMappingsDictionary; however,
            for any new class that maps to a pre-existing interface already in the Dictionary, that new class becomes the Value for
            that interface's Key/Value pair.  In other words, classes in higher layers override classes in lower layers when they map
            to the same interface.  This is how, for example, in Wrenhold's Secret Vigil, you wind up with
            EamonRT.Framework.Components.ICombatComponent mapping to WrenholdsSecretVigil.Game.Components.CombatComponent.  And why a
            call made to <see cref="M:Eamon.Framework.Plugin.IEngine.CreateInstance``1(System.Action{``0})">CreateInstance</see> returns the game-specific CombatComponent object.
            </para>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.LoadPluginClassMappings01(System.Reflection.Assembly)">
            <summary>
            Probes the currently executing library/plugin (Assembly) for all classes adorned with the
            <see cref="T:Eamon.Game.Attributes.ClassMappingsAttribute">ClassMappings</see> attribute, pairs each class with its corresponding
            interface, and updates the <see cref="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">ClassMappingsDictionary</see> accordingly.
            </summary>
            <remarks>
            This is the third and final piece of the Eamon CS dependency injection puzzle.  If you haven't done so, please review the
            remarks on <see cref="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">ClassMappingsDictionary</see> and
            <see cref="M:Eamon.Framework.Plugin.IEngine.LoadPluginClassMappings">LoadPluginClassMappings</see> for necessary background information before reading these
            comments.  This method is responsible for probing the passed in library/plugin (in C# terms, an Assembly) for classes
            adorned with the <see cref="T:Eamon.Game.Attributes.ClassMappingsAttribute">ClassMappings</see> attribute.  Then it iterates over
            each found class and obtains all ClassMappings attribute information for that class.  (While in theory, each class can
            have multiple ClassMappings attributes applied to it, this is not currently done.)  At this point, we know the class will
            be the Value part of a Key/Value pair, but we still don't know what interface to associate it with (the Key part).  This
            is decided based on which ClassMappings constructor is called.  If
            <see cref="M:Eamon.Game.Attributes.ClassMappingsAttribute.#ctor(System.Type)">this constructor</see> is used (e.g.,
            [ClassMappings(typeof(Eamon.Framework.IGameState))]) then the passed in interface is used as the Key.  Otherwise, for
            <see cref="M:Eamon.Game.Attributes.ClassMappingsAttribute.#ctor(System.Type)">this constructor</see> (e.g., [ClassMappings]),
            the name of the interface used as the Key will be synthesized by prepending "I" to the class name.  So, for example,
            CombatComponent pairs with ICombatComponent.  In this scenario, the class must always implement or inherit the interface;
            otherwise the system won't be able to find it.  If the interface to be used as a Key can't be found, Eamon CS will issue
            an error and terminate the program.  Assuming everything checks out, the class is then stored as the Value in the
            Dictionary with the interface as the Key.  If the interface already existed in the Dictionary (having been inserted by
            a lower level of the system) then the old class associated with the interface is replaced with the new class.  This allows
            lower-level interfaces to be associated with increasingly specialized higher-level classes, which is core to the functioning
            of Eamon CS.
            </remarks>
            <param name="plugin"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PushRulesetVersion(System.Int64)">
            <summary></summary>
            <param name="rulesetVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PopRulesetVersion">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ClearRvStack">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetRvStackTop(System.Int64@)">
            <summary></summary>
            <param name="rvStackTop"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetRvStackSize(System.Int64@)">
            <summary></summary>
            <param name="rvStackSize"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.CreateInstance``1(System.Type,System.Action{``0})">
            <summary></summary>
            <param name="ifaceType"></param>
            <param name="initialize"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.CreateInstance``1(System.Action{``0})">
            <summary></summary>
            <param name="initialize"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.CloneInstance``1(``0)">
            <summary></summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.CompareInstances``1(``0,``0)">
            <summary></summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsRulesetVersion(System.Int64[])">
            <summary></summary>
            <param name="versions"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetPrefixedFileName(System.String)">
            <summary></summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ConvertDatafileFromXmlToDat(System.String)">
            <summary></summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PushDatabase">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PushDatabase(Eamon.Framework.DataStorage.IDatabase)">
            <summary></summary>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PopDatabase(System.Boolean)">
            <summary></summary>
            <param name="freeDatabase"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetDatabase(System.Int64,Eamon.Framework.DataStorage.IDatabase@)">
            <summary></summary>
            <param name="index"></param>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.SaveDatabase(System.String)">
            <summary></summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.RestoreDatabase(System.String)">
            <summary></summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ClearDbStack">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetDbStackTop(System.Int64@)">
            <summary></summary>
            <param name="dbStackTop"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetDbStackSize(System.Int64@)">
            <summary></summary>
            <param name="dbStackSize"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.InitSystem">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.DeinitSystem">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ResetProperties(Eamon.Framework.Primitive.Enums.PropertyResetCode)">
            <summary></summary>
            <param name="resetCode"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ReplaceDatafileValues(System.String,System.String[],System.String[])">
            <summary></summary>
            <param name="fileName"></param>
            <param name="patterns"></param>
            <param name="replacements"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ReplaceDatafileValues01(System.String)">
            <summary></summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.UpgradeDatafile(System.String)">
            <summary></summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetPrep(System.Int64)">
            <summary>
            Gets the sentence preposition (e.g., "to", "from", "inside", etc).
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArticle(System.Int64)">
            <summary>
            Gets the sentence article (e.g., "a", "some", "the", etc).
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetNumberString(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetFieldDescName(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetFieldDescName(Eamon.Framework.Primitive.Enums.FieldDesc)">
            <summary></summary>
            <param name="fieldDesc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetStatusName(System.Int64)">
            <summary>
            Gets the name for a given <see cref="T:Eamon.Framework.Primitive.Enums.Status"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetStatusName(Eamon.Framework.Primitive.Enums.Status)">
            <summary>
            Gets the name for a given <see cref="T:Eamon.Framework.Primitive.Enums.Status"/>.
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetClothingName(System.Int64)">
            <summary>
            Gets the name for a given <see cref="T:Eamon.Framework.Primitive.Enums.Clothing"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetClothingName(Eamon.Framework.Primitive.Enums.Clothing)">
            <summary>
            Gets the name for a given <see cref="T:Eamon.Framework.Primitive.Enums.Clothing"/>.
            </summary>
            <param name="clothing"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetCombatCodeDesc(System.Int64)">
            <summary>
            Gets the description for a given <see cref="T:Eamon.Framework.Primitive.Enums.CombatCode"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetCombatCodeDesc(Eamon.Framework.Primitive.Enums.CombatCode)">
            <summary>
            Gets the description for a given <see cref="T:Eamon.Framework.Primitive.Enums.CombatCode"/>.
            </summary>
            <param name="combatCode"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetContainerDisplayCodeDesc(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetContainerDisplayCodeDesc(Eamon.Framework.Primitive.Enums.ContainerDisplayCode)">
            <summary></summary>
            <param name="containerDisplayCode"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetLightLevelName(System.Int64)">
            <summary>
            Gets the name for a given <see cref="T:Eamon.Framework.Primitive.Enums.LightLevel"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetLightLevelName(Eamon.Framework.Primitive.Enums.LightLevel)">
            <summary>
            Gets the name for a given <see cref="T:Eamon.Framework.Primitive.Enums.LightLevel"/>.
            </summary>
            <param name="lightLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetStat(System.Int64)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Stat"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetStat(Eamon.Framework.Primitive.Enums.Stat)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Stat"/>.
            </summary>
            <param name="stat"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetSpell(System.Int64)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Spell"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetSpell(Eamon.Framework.Primitive.Enums.Spell)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Spell"/>.
            </summary>
            <param name="spell"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetWeapon(System.Int64)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Weapon"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetWeapon(Eamon.Framework.Primitive.Enums.Weapon)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Weapon"/>.
            </summary>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArmor(System.Int64)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Armor"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArmor(Eamon.Framework.Primitive.Enums.Armor)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Armor"/>.
            </summary>
            <param name="armor"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetDirection(System.Int64)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Direction"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetDirection(Eamon.Framework.Primitive.Enums.Direction)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.Direction"/>.
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArtifactType(System.Int64)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.ArtifactType"/>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArtifactType(Eamon.Framework.Primitive.Enums.ArtifactType)">
            <summary>
            Gets the data for a given <see cref="T:Eamon.Framework.Primitive.Enums.ArtifactType"/>.
            </summary>
            <param name="artifactType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsSuccess(Eamon.RetCode)">
            <summary>
            Indicates whether an operation succeeded.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsFailure(Eamon.RetCode)">
            <summary>
            Indicates whether an operation failed.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidPluralType(Eamon.Framework.Primitive.Enums.PluralType)">
            <summary>
            Indicates whether a plural type is valid.
            </summary>
            <param name="pluralType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidArtifactType(Eamon.Framework.Primitive.Enums.ArtifactType)">
            <summary>
            Indicates whether an artifact type is valid.
            </summary>
            <param name="artifactType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidArtifactArmor(System.Int64,System.Boolean)">
            <summary>
            Indicates whether an armor value is valid for an wearable <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
            <param name="armor"></param>
            <param name="includeShields"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidMonsterArmor(System.Int64)">
            <summary>
            Indicates whether an armor value is valid for a <see cref="T:Eamon.Framework.IMonster">Monster</see>.
            </summary>
            <param name="armor"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidMonsterCourage(System.Int64)">
            <summary>
            Indicates whether a courage value is valid for a <see cref="T:Eamon.Framework.IMonster">Monster</see>.
            </summary>
            <param name="courage"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidMonsterFriendliness(Eamon.Framework.Primitive.Enums.Friendliness)">
            <summary></summary>
            <param name="friendliness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidMonsterFriendlinessPct(Eamon.Framework.Primitive.Enums.Friendliness)">
            <summary></summary>
            <param name="friendliness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidDirection(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidRoomUid01(System.Int64)">
            <summary></summary>
            <param name="roomUid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsValidRoomDirectionDoorUid01(System.Int64)">
            <summary></summary>
            <param name="roomUid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsArtifactFieldStrength(System.Int64)">
            <summary></summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsUnmovable(System.Int64)">
            <summary></summary>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsUnmovable01(System.Int64)">
            <summary></summary>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetWeightCarryableGronds(System.Int64)">
            <summary></summary>
            <param name="hardiness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetWeightCarryableDos(System.Int64)">
            <summary></summary>
            <param name="hardiness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetIntellectBonusPct(System.Int64)">
            <summary></summary>
            <param name="intellect"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetCharmMonsterPct(System.Int64)">
            <summary></summary>
            <param name="charisma"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetPluralTypeEffectUid(Eamon.Framework.Primitive.Enums.PluralType)">
            <summary></summary>
            <param name="pluralType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArmorFactor(System.Int64,System.Int64)">
            <summary></summary>
            <param name="armorUid"></param>
            <param name="shieldUid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetCharismaFactor(System.Int64)">
            <summary></summary>
            <param name="charisma"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetMonsterFriendlinessPct(Eamon.Framework.Primitive.Enums.Friendliness)">
            <summary></summary>
            <param name="friendliness"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArtifactFieldStrength(System.Int64)">
            <summary></summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetMerchantAskPrice(System.Double,System.Double)">
            <summary></summary>
            <param name="price"></param>
            <param name="rtio"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetMerchantBidPrice(System.Double,System.Double)">
            <summary></summary>
            <param name="price"></param>
            <param name="rtio"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetMerchantAdjustedCharisma(System.Int64)">
            <summary></summary>
            <param name="charisma"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetMerchantRtio(System.Int64)">
            <summary></summary>
            <param name="charisma"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharYOrN(System.Char)">
            <summary>
            Indicates whether a character is one of ['Y', 'N'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharGOrAOrN(System.Char)">
            <summary>
            Indicates whether a character is one of ['G', 'A', 'N'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharSOrTOrROrX(System.Char)">
            <summary>
            Indicates whether a character is one of ['S', 'T', 'R', 'X'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharNOrSOrEOrW(System.Char)">
            <summary>
            Indicates whether a character is one of ['N', 'S', 'E', 'W'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsChar0Or1(System.Char)">
            <summary>
            Indicates whether a character is one of ['0', '1'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsChar0To2(System.Char)">
            <summary>
            Indicates whether a character is one of ['0', '1', '2'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsChar0To3(System.Char)">
            <summary>
            Indicates whether a character is one of ['0', '1', '2', '3'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsChar1To3(System.Char)">
            <summary>
            Indicates whether a character is one of ['1', '2', '3'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsChar1To4(System.Char)">
            <summary>
            Indicates whether a character is one of ['1', '2', '3', '4'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharDigit(System.Char)">
            <summary>
            Indicates whether a character is a numeric digit.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharDigitOrX(System.Char)">
            <summary>
            Indicates whether a character is a numeric digit or 'X'.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharPlusMinusDigit(System.Char)">
            <summary>
            Indicates whether a character is a numeric digit or one of ['+', '-'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAlpha(System.Char)">
            <summary>
            Indicates whether a character is alphabetic.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAlphaSpace(System.Char)">
            <summary>
            Indicates whether a character is alphabetic or space.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAlnum(System.Char)">
            <summary>
            Indicates whether a character is alphabetic or numeric digit.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAlnumSpace(System.Char)">
            <summary>
            Indicates whether a character is alphabetic, numeric digit or space.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAlnumPeriodUnderscore(System.Char)">
            <summary>
            Indicates whether a character is alphabetic, numeric digit, period or underscore.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharPrint(System.Char)">
            <summary>
            Indicates whether a character is printable.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharPound(System.Char)">
            <summary>
            Indicates whether a character is '#'.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharQuote(System.Char)">
            <summary>
            Indicates whether a character is a quote.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAny(System.Char)">
            <summary>
            Indicates whether a character is any character at all.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAnyButDquoteCommaColon(System.Char)">
            <summary>
            Indicates whether a character is any character but one of ['"', ',', ':'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.IsCharAnyButBackForwardSlash(System.Char)">
            <summary>
            Indicates whether a character is any character but one of ['\', '/'].
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ModifyCharToUpper(System.Char)">
            <summary>
            Given a character, produce its upper case equivalent, if any.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ModifyCharToNullOrX(System.Char)">
            <summary>
            Given a character, produce either 'X' or '\0'.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ModifyCharToNull(System.Char)">
            <summary>
            Given a character, produce '\0'.
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetDirection(System.String)">
            <summary></summary>
            <param name="directionName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetContainerType(Eamon.Framework.Primitive.Enums.ArtifactType)">
            <summary></summary>
            <param name="artifactType"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetConfig">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetGameState">
            <summary>
            Gets the <see cref="T:Eamon.Framework.IGameState">GameState</see> record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetModule">
            <summary>
            Gets the <see cref="T:Eamon.Framework.IModule">Module</see> record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetRandomElement``1(``0[],System.Func{System.Int64})">
            <summary></summary>
            <param name="array"></param>
            <param name="indexFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.EvalFriendliness``1(Eamon.Framework.Primitive.Enums.Friendliness,``0,``0,``0)">
            <summary>
            Evaluates the <see cref="T:Eamon.Framework.Primitive.Enums.Friendliness"/>, returning a value of type T.
            </summary>
            <param name="friendliness"></param>
            <param name="enemyValue"></param>
            <param name="neutralValue"></param>
            <param name="friendValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.EvalGender``1(Eamon.Framework.Primitive.Enums.Gender,``0,``0,``0)">
            <summary>
            Evaluates the <see cref="T:Eamon.Framework.Primitive.Enums.Gender"/>, returning a value of type T.
            </summary>
            <param name="gender"></param>
            <param name="maleValue"></param>
            <param name="femaleValue"></param>
            <param name="neutralValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.EvalContainerType``1(Eamon.Framework.Primitive.Enums.ContainerType,``0,``0,``0,``0)">
            <summary>
            Evaluates the <see cref="T:Eamon.Framework.Primitive.Enums.ContainerType"/>, returning a value of type T.
            </summary>
            <param name="containerType"></param>
            <param name="inValue"></param>
            <param name="onValue"></param>
            <param name="underValue"></param>
            <param name="behindValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.EvalRoomType``1(Eamon.Framework.Primitive.Enums.RoomType,``0,``0)">
            <summary>
            Evaluates the <see cref="T:Eamon.Framework.Primitive.Enums.RoomType"/>, returning a value of type T.
            </summary>
            <param name="roomType"></param>
            <param name="indoorsValue"></param>
            <param name="outdoorsValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.EvalLightLevel``1(Eamon.Framework.Primitive.Enums.LightLevel,``0,``0)">
            <summary>
            Evaluates the <see cref="T:Eamon.Framework.Primitive.Enums.LightLevel"/>, returning a value of type T.
            </summary>
            <param name="lightLevel"></param>
            <param name="darkValue"></param>
            <param name="lightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.EvalPlural``1(System.Boolean,``0,``0)">
            <summary>
            Evaluates the plural value, returning a value of type T.
            </summary>
            <param name="isPlural"></param>
            <param name="singularValue"></param>
            <param name="pluralValue"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.BuildPrompt(System.Int64,System.Char,System.Int64,System.String,System.String)">
            <summary></summary>
            <param name="bufSize"></param>
            <param name="fillChar"></param>
            <param name="number"></param>
            <param name="msg"></param>
            <param name="emptyVal"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.BuildValue(System.Int64,System.Char,System.Int64,System.Int64,System.String,System.String)">
            <summary></summary>
            <param name="bufSize"></param>
            <param name="fillChar"></param>
            <param name="offset"></param>
            <param name="longVal"></param>
            <param name="stringVal"></param>
            <param name="lookupMsg"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.WordWrap(System.String,System.Text.StringBuilder,System.Int64,Eamon.Framework.Args.IWordWrapArgs,System.Boolean)">
            <summary></summary>
            <param name="str"></param>
            <param name="buf"></param>
            <param name="margin"></param>
            <param name="args"></param>
            <param name="clearBuf"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.WordWrap(System.String,System.Text.StringBuilder,System.Boolean)">
            <summary></summary>
            <param name="str"></param>
            <param name="buf"></param>
            <param name="clearBuf"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.LineWrap(System.String,System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary></summary>
            <param name="str"></param>
            <param name="buf"></param>
            <param name="startColumn"></param>
            <param name="clearBuf"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetStringFromNumber(System.Int64,System.Boolean,System.Text.StringBuilder)">
            <summary></summary>
            <param name="num"></param>
            <param name="addSpace"></param>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetNumberFromString(System.String)">
            <summary></summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.RollDice(System.Int64,System.Int64,System.Int64[]@)">
            <summary>
            Rolls a number of dice, storing the resulting values in an array.
            </summary>
            <param name="numDice"></param>
            <param name="numSides"></param>
            <param name="dieRolls"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.RollDice(System.Int64,System.Int64,System.Int64)">
            <summary>
            Rolls a number of dice, returning a sum of the results.
            </summary>
            <param name="numDice"></param>
            <param name="numSides"></param>
            <param name="modifier"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.SumHighestRolls(System.Int64[],System.Int64,System.Int64@)">
            <summary>
            Given an array of die rolls, sum the highest of them and return the result.
            </summary>
            <param name="dieRolls"></param>
            <param name="numRollsToSum"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.Capitalize(System.String)">
            <summary></summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.UnlinkOnFailure">
            <summary>
            Deletes a set of game-related files from the filesystem.
            </summary>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.TruncatePluralTypeEffectDesc(Eamon.Framework.Primitive.Enums.PluralType,System.Int64)">
            <summary></summary>
            <param name="pluralType"></param>
            <param name="maxSize"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.TruncatePluralTypeEffectDesc(Eamon.Framework.IEffect)">
            <summary></summary>
            <param name="effect"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.SplitPath(System.String,System.String@,System.String@,System.String@,System.Boolean)">
            <summary></summary>
            <param name="fullPath"></param>
            <param name="directory"></param>
            <param name="fileName"></param>
            <param name="extension"></param>
            <param name="appendDirectorySeparatorChar"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.StripPrepsAndArticles(System.Text.StringBuilder,System.Boolean@)">
            <summary></summary>
            <param name="buf"></param>
            <param name="mySeen"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PrintTitle(System.String,System.Boolean)">
            <summary></summary>
            <param name="title"></param>
            <param name="inBox"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PrintEffectDesc(Eamon.Framework.IEffect,System.Boolean)">
            <summary></summary>
            <param name="effect"></param>
            <param name="printFinalNewLine"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PrintEffectDesc(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="effectUid"></param>
            <param name="printFinalNewLine"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.PrintZapDirectHit">
            <summary>
            Prints the <see cref="F:Eamon.Framework.Primitive.Enums.Spell.Blast">Blast</see> spell description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ValidateRecordsAfterDatabaseLoaded">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.StatDisplay(Eamon.Framework.Args.IStatDisplayArgs)">
            <summary></summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetRecordNameList(System.Collections.Generic.IList{Eamon.Framework.IGameBase},Eamon.Framework.Args.IRecordNameListArgs,System.Text.StringBuilder)">
            <summary></summary>
            <param name="recordList"></param>
            <param name="args"></param>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetRecordNameCount(System.Collections.Generic.IList{Eamon.Framework.IGameBase},System.String,System.Boolean,System.Int64@)">
            <summary></summary>
            <param name="recordList"></param>
            <param name="name"></param>
            <param name="exactMatch"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ListRecords(System.Collections.Generic.IList{Eamon.Framework.IGameBase},System.Boolean,System.Boolean,System.Text.StringBuilder)">
            <summary></summary>
            <param name="recordList"></param>
            <param name="capitalize"></param>
            <param name="showExtraInfo"></param>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ResolveUidMacros(System.String,System.Text.StringBuilder,System.Boolean,System.Boolean,System.Int64@)">
            <summary></summary>
            <param name="str"></param>
            <param name="buf"></param>
            <param name="resolveFuncs"></param>
            <param name="recurse"></param>
            <param name="invalidUid"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ResolveUidMacros(System.String,System.Text.StringBuilder,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="str"></param>
            <param name="buf"></param>
            <param name="resolveFuncs"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetWeaponPriceOrValue(System.String,System.Int64,Eamon.Framework.Primitive.Enums.Weapon,System.Int64,System.Int64,System.Int64,System.Boolean,System.Boolean@)">
            <summary></summary>
            <param name="name"></param>
            <param name="complexity"></param>
            <param name="type"></param>
            <param name="dice"></param>
            <param name="sides"></param>
            <param name="numHands"></param>
            <param name="calcPrice"></param>
            <param name="isMarcosWeapon"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetWeaponPriceOrValue(Eamon.Framework.Primitive.Classes.ICharacterArtifact,System.Boolean,System.Boolean@)">
            <summary></summary>
            <param name="weapon"></param>
            <param name="calcPrice"></param>
            <param name="isMarcosWeapon"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArmorPriceOrValue(Eamon.Framework.Primitive.Enums.Armor,System.Boolean,System.Boolean@)">
            <summary></summary>
            <param name="armor"></param>
            <param name="calcPrice"></param>
            <param name="isMarcosArmor"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.AppendFieldDesc(Eamon.Framework.Primitive.Enums.FieldDesc,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary></summary>
            <param name="fieldDesc"></param>
            <param name="buf"></param>
            <param name="fullDesc"></param>
            <param name="briefDesc"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.AppendFieldDesc(Eamon.Framework.Primitive.Enums.FieldDesc,System.Text.StringBuilder,System.String,System.String)">
            <summary></summary>
            <param name="fieldDesc"></param>
            <param name="buf"></param>
            <param name="fullDesc"></param>
            <param name="briefDesc"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.CopyCharacterArtifactFields(Eamon.Framework.Primitive.Classes.ICharacterArtifact,Eamon.Framework.Primitive.Classes.ICharacterArtifact)">
            <summary></summary>
            <param name="destCa"></param>
            <param name="sourceCa"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.CopyArtifactCategoryFields(Eamon.Framework.Primitive.Classes.IArtifactCategory,Eamon.Framework.Primitive.Classes.IArtifactCategory)">
            <summary></summary>
            <param name="destAc"></param>
            <param name="sourceAc"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetArtifactList(System.Func{Eamon.Framework.IArtifact,System.Boolean}[])">
            <summary></summary>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetMonsterList(System.Func{Eamon.Framework.IMonster,System.Boolean}[])">
            <summary></summary>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetRecordList(System.Func{Eamon.Framework.IGameBase,System.Boolean}[])">
            <summary></summary>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetNthArtifact(System.Collections.Generic.IList{Eamon.Framework.IArtifact},System.Int64,System.Func{Eamon.Framework.IArtifact,System.Boolean})">
            <summary></summary>
            <param name="artifactList"></param>
            <param name="which"></param>
            <param name="whereClauseFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetNthMonster(System.Collections.Generic.IList{Eamon.Framework.IMonster},System.Int64,System.Func{Eamon.Framework.IMonster,System.Boolean})">
            <summary></summary>
            <param name="monsterList"></param>
            <param name="which"></param>
            <param name="whereClauseFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.GetNthRecord(System.Collections.Generic.IList{Eamon.Framework.IGameBase},System.Int64,System.Func{Eamon.Framework.IGameBase,System.Boolean})">
            <summary></summary>
            <param name="recordList"></param>
            <param name="which"></param>
            <param name="whereClauseFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.StripUniqueCharsFromRecordNames(System.Collections.Generic.IList{Eamon.Framework.IGameBase})">
            <summary></summary>
            <param name="recordList"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.AddUniqueCharsToRecordNames(System.Collections.Generic.IList{Eamon.Framework.IGameBase})">
            <summary></summary>
            <param name="recordList"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ConvertWeaponToGoldOrTreasure(Eamon.Framework.IArtifact,System.Boolean)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="convertToGold"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ConvertTreasureToContainer(Eamon.Framework.IArtifact,Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="containerType"></param>
        </member>
        <member name="M:Eamon.Framework.Plugin.IEngine.ConvertContainerToTreasure(Eamon.Framework.IArtifact,Eamon.Framework.Primitive.Enums.ContainerType)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="containerType"></param>
        </member>
        <member name="T:Eamon.Framework.Portability.IDirectory">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.Exists(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.IsEamonCSDirectory(System.String,System.String@)">
            <summary></summary>
            <param name="path"></param>
            <param name="parentName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.Delete(System.String,System.Boolean)">
            <summary></summary>
            <param name="path"></param>
            <param name="recursive"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.DeleteEmptySubdirectories(System.String,System.Boolean)">
            <summary></summary>
            <param name="path"></param>
            <param name="recursive"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.CreateDirectory(System.String)">
            <summary></summary>
            <param name="path"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.SetCurrentDirectory(System.String)">
            <summary></summary>
            <param name="path"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.GetCurrentDirectory">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.GetFiles(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IDirectory.GetDirectories(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Portability.IFile">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.Exists(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.Delete(System.String)">
            <summary></summary>
            <param name="path"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.Copy(System.String,System.String,System.Boolean)">
            <summary></summary>
            <param name="sourceFileName"></param>
            <param name="destFileName"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.ReadFirstLine(System.String,System.Text.Encoding)">
            <summary></summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.ReadAllText(System.String,System.Text.Encoding)">
            <summary></summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.OpenRead(System.String)">
            <summary></summary>
            <param name="path"></param>
            <remarks>
            Note: only used to convert legacy Eamon games to Eamon CS
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary></summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.IFile.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary></summary>
            <param name="path"></param>
            <param name="contents"></param>
            <param name="encoding"></param>
        </member>
        <member name="T:Eamon.Framework.Portability.IMutex">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.IMutex.CreateAndWaitOne">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Portability.IPath">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.IPath.DirectorySeparatorChar">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.EqualPaths(System.String,System.String)">
            <summary></summary>
            <param name="path1"></param>
            <param name="path2"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.Combine(System.String[])">
            <summary></summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.GetDirectoryName(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.GetExtension(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.GetFileName(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.GetFileNameWithoutExtension(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.GetFullPath(System.String)">
            <summary></summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.IPath.ChangeExtension(System.String,System.String)">
            <summary></summary>
            <param name="path"></param>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Portability.IProgram">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.IProgram.EnableStdio">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.IProgram.LineWrapUserInput">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.IProgram.ConvertDatafileToMscorlib">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.IProgram.LoadPortabilityClassMappings">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.IProgram.Main(System.String[])">
            <summary></summary>
            <param name="args"></param>
        </member>
        <member name="T:Eamon.Framework.Portability.ISharpSerializer">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.ISharpSerializer.Serialize``1(``0,System.String,System.Boolean)">
            <summary></summary>
            <param name="data"></param>
            <param name="fileName"></param>
            <param name="binaryMode"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ISharpSerializer.Serialize``1(``0,System.IO.Stream,System.Boolean)">
            <summary></summary>
            <param name="data"></param>
            <param name="stream"></param>
            <param name="binaryMode"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ISharpSerializer.Deserialize``1(System.String,System.Boolean)">
            <summary></summary>
            <param name="fileName"></param>
            <param name="binaryMode"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ISharpSerializer.Deserialize``1(System.IO.Stream,System.Boolean)">
            <summary></summary>
            <param name="stream"></param>
            <param name="binaryMode"></param>
            <returns></returns>
        </member>
        <member name="T:Eamon.Framework.Portability.ITextReader">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextReader.EnableInput">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextReader.ReadField(System.Text.StringBuilder,System.Int64,System.Char[],System.Char,System.Char,System.Boolean,System.String,System.Func{System.Char,System.Char},System.Func{System.Char,System.Boolean},System.Func{System.Char,System.Boolean})">
            <summary></summary>
            <param name="buf"></param>
            <param name="bufSize"></param>
            <param name="boxChars"></param>
            <param name="fillChar"></param>
            <param name="maskChar"></param>
            <param name="emptyAllowed"></param>
            <param name="emptyVal"></param>
            <param name="modifyCharFunc"></param>
            <param name="validCharFunc"></param>
            <param name="termCharFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextReader.ReadField(System.Text.StringBuilder,System.Int64,System.Char[],System.String,System.Func{System.Char,System.Boolean})">
            <summary></summary>
            <param name="buf"></param>
            <param name="bufSize"></param>
            <param name="boxChars"></param>
            <param name="emptyVal"></param>
            <param name="validCharFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextReader.ReadField(System.Text.StringBuilder,System.Int64,System.Char[],System.String)">
            <summary></summary>
            <param name="buf"></param>
            <param name="bufSize"></param>
            <param name="boxChars"></param>
            <param name="emptyVal"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextReader.ReadLine">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextReader.ReadKey(System.Boolean)">
            <summary></summary>
            <param name="intercept"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextReader.KeyPress(System.Text.StringBuilder,System.Boolean)">
            <summary></summary>
            <param name="buf"></param>
            <param name="initialNewLine"></param>
        </member>
        <member name="T:Eamon.Framework.Portability.Coord">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.Coord.X">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.Coord.Y">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Portability.ITextWriter">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.EnableOutput">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.ResolveUidMacros">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.WordWrap">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.SuppressNewLines">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.Stdout">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.PunctSpaceCode">
            <summary>
            Gets or sets a value indicating whether text being output has one or two spaces after punctuation, or if this behavior is disabled.
            </summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.Encoding">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Portability.ITextWriter.CursorVisible">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.SetCursorPosition(Eamon.Framework.Portability.Coord)">
            <summary></summary>
            <param name="coord"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.SetWindowTitle(System.String)">
            <summary></summary>
            <param name="title"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.SetWindowSize(System.Int64,System.Int64)">
            <summary></summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.SetBufferSize(System.Int64,System.Int64)">
            <summary></summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.GetCursorPosition">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.GetLargestWindowWidth">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.GetLargestWindowHeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.GetWindowHeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.GetBufferHeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Print(System.String,System.Object[])">
            <summary></summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Object)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.String)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Decimal)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Double)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Single)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Int64)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.UInt32)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Int32)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Boolean)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Char[])">
            <summary></summary>
            <param name="buffer"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Char)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.UInt64)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.String,System.Object)">
            <summary></summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.String,System.Object[])">
            <summary></summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.String,System.Object,System.Object)">
            <summary></summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary></summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary></summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Object)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.String)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Decimal)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Single)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.UInt64)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Double)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.UInt32)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Int32)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Boolean)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Char[])">
            <summary></summary>
            <param name="buffer"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Char)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Int64)">
            <summary></summary>
            <param name="value"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.String,System.Object)">
            <summary></summary>
            <param name="format"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.String,System.Object[])">
            <summary></summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary></summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary></summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary></summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="T:Eamon.Framework.Portability.IThread">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.IThread.Sleep(System.Int64)">
            <summary></summary>
            <param name="milliseconds"></param>
        </member>
        <member name="T:Eamon.Framework.Portability.ITransferProtocol">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Portability.ITransferProtocol.SendCharacterToMainHall(System.String,System.String,System.String,System.String,System.String)">
            <summary></summary>
            <param name="filePrefix"></param>
            <param name="filesetFileName"></param>
            <param name="characterFileName"></param>
            <param name="effectFileName"></param>
            <param name="characterName"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITransferProtocol.SendCharacterOnAdventure(System.String,System.String,System.String)">
            <summary></summary>
            <param name="workDir"></param>
            <param name="filePrefix"></param>
            <param name="pluginFileName"></param>
        </member>
        <member name="M:Eamon.Framework.Portability.ITransferProtocol.RecallCharacterFromAdventure(System.String,System.String,System.String)">
            <summary></summary>
            <param name="workDir"></param>
            <param name="filePrefix"></param>
            <param name="pluginFileName"></param>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IArmor">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArmor.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArmor.MarcosName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArmor.MarcosPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArmor.MarcosNum">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArmor.ArtifactValue">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IArtifactCategory">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Parent">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.SyncFields">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Type">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field1">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field2">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field3">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field4">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactCategory.Field5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsOpenable">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsLockable">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsBreakable">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsEffectExposer">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsMonsterExposer">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsWeapon(Eamon.Framework.Primitive.Enums.Weapon)">
            <summary></summary>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsWeapon01">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.IsOpen">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SetOpen(System.Boolean)">
            <summary></summary>
            <param name="open"></param>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SetKeyUid(System.Int64)">
            <summary></summary>
            <param name="artifactUid"></param>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SetBreakageStrength(System.Int64)">
            <summary></summary>
            <param name="strength"></param>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SetFirstEffect(System.Int64)">
            <summary></summary>
            <param name="effectUid"></param>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SetNumEffects(System.Int64)">
            <summary></summary>
            <param name="numEffects"></param>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SetMonsterUid(System.Int64)">
            <summary></summary>
            <param name="monsterUid"></param>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.GetKeyUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.GetBreakageStrength">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.GetFirstEffect">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.GetNumEffects">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.GetMonsterUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.IArtifactCategory.SyncArtifactCategories">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IArtifactLinkage">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactLinkage.RoomUid">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactLinkage.ArtifactUid1">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactLinkage.ArtifactUid2">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IArtifactType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.WeightEmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.LocationEmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field1Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field1EmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field2Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field2EmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field3Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field3EmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field4Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field4EmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field5Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IArtifactType.Field5EmptyVal">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.ICharacterArtifact">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Parent">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Desc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.IsPlural">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.PluralType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.ArticleType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Value">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Weight">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Type">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Field1">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Field2">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Field3">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Field4">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ICharacterArtifact.Field5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.ICharacterArtifact.IsActive">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Framework.Primitive.Classes.ICharacterArtifact.ClearExtraFields">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IDirection">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IDirection.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IDirection.PrintedName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IDirection.Abbr">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IDirection.EnterDir">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IMonsterSpell">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IMonsterSpell.Parent">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IMonsterSpell.Spell">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IMonsterSpell.Field1">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IMonsterSpell.Field2">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IPrep">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IPrep.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IPrep.ContainerType">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.ISpell">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ISpell.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ISpell.HokasName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ISpell.HokasPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ISpell.MinValue">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.ISpell.MaxValue">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IStat">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IStat.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IStat.Abbr">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IStat.EmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IStat.MinValue">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IStat.MaxValue">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Classes.IWeapon">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.Name">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.EmptyVal">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosName">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosIsPlural">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosPluralType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosArticleType">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosPrice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosDice">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosSides">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MarcosNumHands">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MinValue">
            <summary></summary>
        </member>
        <member name="P:Eamon.Framework.Primitive.Classes.IWeapon.MaxValue">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Armor">
            <summary>
            An enumeration of character Armor Classes.
            </summary>
            <remarks>
            These armor classes parallel those found in Eamon Deluxe.  You can take a look through the
            documentation for EDX or wait for the Eamon CS Dungeon Designer's Manual, which will have
            more details.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.SkinClothes">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.ClothesShield">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.Leather">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.LeatherShield">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.ChainMail">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.ChainMailShield">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.PlateMail">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.PlateMailShield">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExotic8">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExoticShield9">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExotic10">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExoticShield11">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExotic12">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExoticShield13">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExotic14">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Armor.MagicExoticShield15">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.ArticleType">
            <summary>
            An enumeration of Article Types.
            </summary>
            <remarks>
            These article types are applied to the <see cref="P:Eamon.Framework.IGameBase.Name">Name</see>s of <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s and
            <see cref="T:Eamon.Framework.IMonster">Monster</see>s to improve the aesthetics of the output, making it more natural to read.  You can modify
            any record at runtime to change its article type if desired.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArticleType.None">
            <summary>
            No article is ever applied.  For example, "Trollsfire" or "Heinrich".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArticleType.A">
            <summary>
            The name is preceded by "a".  For example, "a flashlight" or "a wolverine".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArticleType.An">
            <summary>
            The name is preceded by "an".  For example, "an axe" or "an orc".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArticleType.Some">
            <summary>
            The name is preceded by "some".  For example, "some leather armor", "some silver cups" or "some green slime".
            </summary>
            <remarks>
            For <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s, it is important to distinguish between singular Artifacts (like the leather armor) and
            plural Artifacts (the silver cups).  Plural Artifacts should be named as singular; this article type combined with the right plural
            type will produce the correct name.  The situation for <see cref="T:Eamon.Framework.IMonster">Monster</see>s is similar; it is important to distinguish
            between singular Monsters (like the green slime) and group Monsters.  Group Monsters have their own plural syntax (e.g., "seven kobolds").
            Group Monsters should be named as singular, but with a singular article type (e.g., "a kobold"), and the right plural type.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArticleType.The">
            <summary>
            The name is preceded by "the".  For example, "the Rings of Zylo" or "the Emerald Warrior".
            </summary>
            <remarks>
            Typically only applied to unique <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s or <see cref="T:Eamon.Framework.IMonster">Monster</see>s, or those with special
            importance in the game.
            </remarks>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.ArtifactType">
            <summary>
            An enumeration of Artifact Types.
            </summary>
            <remarks>
            These artifact types parallel those found in Eamon Deluxe, but Eamon CS supports a multiple
            artifact type paradigm.  You can take a look through the documentation for EDX or wait for
            the Eamon CS Dungeon Designer's Manual, which will have more details.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Gold">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Treasure">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Weapon">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.MagicWeapon">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.InContainer">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.OnContainer">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.UnderContainer">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.BehindContainer">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.LightSource">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Drinkable">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Readable">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.DoorGate">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Edible">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.BoundMonster">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.Wearable">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.DisguisedMonster">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.DeadBody">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.User1">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.User2">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ArtifactType.User3">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Clothing">
            <summary>
            An enumeration of Clothing Types.
            </summary>
            <remarks>
            These clothing types parallel those found in Eamon Deluxe.  You can take a look through the
            documentation for EDX or wait for the Eamon CS Dungeon Designer's Manual, which will have
            more details.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.ArmorShields">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.Overclothes">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.ShoesBoots">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.Gloves">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.HatsHeadwear">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.Jewelry">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.Undergarments">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.Shirts">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Clothing.Pants">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.CombatCode">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.IMonster">Monster</see> Combat Codes.
            </summary>
            <remarks>
            These represent the behavior of <see cref="T:Eamon.Framework.IMonster">Monster</see>s while in combat.  Their effect on gameplay is intended to parallel
            the Combat Code setting found in Eamon Deluxe.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CombatCode.NeverFights">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> will never fight.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CombatCode.NaturalWeapons">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> will favor <see cref="T:Eamon.Framework.IArtifact">Artifact</see> weapons but fall back to natural weapons if necessary.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CombatCode.Weapons">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> will use either <see cref="T:Eamon.Framework.IArtifact">Artifact</see> weapons or natural weapons (but never both).
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CombatCode.Attacks">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> will be described as "attacking"; otherwise mirrors the <see cref="F:Eamon.Framework.Primitive.Enums.CombatCode.Weapons">Weapons</see> setting.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CombatCode.NaturalAttacks">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> will be described as "attacking"; otherwise mirrors the <see cref="F:Eamon.Framework.Primitive.Enums.CombatCode.NaturalWeapons">NaturalWeapons</see> setting.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.CommandType">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CommandType.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CommandType.Movement">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CommandType.Manipulation">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CommandType.Interactive">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.CommandType.Miscellaneous">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.ContainerDisplayCode">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerDisplayCode.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerDisplayCode.SomethingSomeStuff">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerDisplayCode.ArtifactNameSomeStuff">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerDisplayCode.ArtifactNameList">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.ContainerType">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerType.In">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerType.On">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerType.Under">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ContainerType.Behind">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Direction">
            <summary>
            An enumeration of (compass) Directions.
            </summary>
            <remarks>
            These represent the possible directional links between <see cref="T:Eamon.Framework.IRoom">Room</see>s in a game.  Each Room contains an
            array that is indexed using these Direction values.  The array will always be created assuming a 12-direction game; for
            6-direction games, the last six (6) elements will be unused.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.North">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.South">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.East">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.West">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Up">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Down">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Northeast">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Northwest">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Southeast">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Southwest">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.In">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Direction.Out">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.ExitType">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.GoToMainHall">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.Quit">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.StartOver">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.FinishAdventure">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.DeleteCharacter">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.Error">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.User1">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.User2">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.ExitType.User3">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.FieldDesc">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.FieldDesc.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.FieldDesc.Brief">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.FieldDesc.Full">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Friendliness">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.IMonster">Monster</see> friendliness values.  
            </summary>
            <remarks>
            Each <see cref="T:Eamon.Framework.IMonster">Monster</see> in a game has a reaction to the player character, as defined by this
            enum.  This is pretty standard to Eamon in general and Eamon CS is no different.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Friendliness.Enemy">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> is hostile to the player character and all <see cref="F:Eamon.Framework.Primitive.Enums.Friendliness.Friend">Friend</see> monsters.
            The Monster attacks on sight and flees the <see cref="T:Eamon.Framework.IRoom">Room</see> or pursues based on <see cref="P:Eamon.Framework.IMonster.Courage">Courage</see>.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Friendliness.Neutral">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> ignores all other Monsters and refuses to flee the <see cref="T:Eamon.Framework.IRoom">Room</see>, or attack
            either <see cref="F:Eamon.Framework.Primitive.Enums.Friendliness.Friend">Friend</see> or <see cref="F:Eamon.Framework.Primitive.Enums.Friendliness.Enemy">Enemy</see>.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Friendliness.Friend">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> is friendly, follows the player character around and attacks <see cref="F:Eamon.Framework.Primitive.Enums.Friendliness.Enemy">Enemy</see> Monsters.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Gender">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.ICharacter">Character</see>/<see cref="T:Eamon.Framework.IMonster">Monster</see> genders.
            </summary>
            <remarks>
            Each <see cref="T:Eamon.Framework.ICharacter">Character</see> or <see cref="T:Eamon.Framework.IMonster">Monster</see> in a game is assigned
            a gender value.  For player characters this is of course set during creation in the Main Hall.  As with
            all other properties, the gender value can be manipulated during gameplay (and, in at least one ECS
            adventure, actually is!)
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Gender.Male">
            <summary>
            The <see cref="T:Eamon.Framework.ICharacter">Character</see> or <see cref="T:Eamon.Framework.IMonster">Monster</see> is male.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Gender.Female">
            <summary>
            The <see cref="T:Eamon.Framework.ICharacter">Character</see> or <see cref="T:Eamon.Framework.IMonster">Monster</see> is female.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Gender.Neutral">
            <summary>
            The <see cref="T:Eamon.Framework.IMonster">Monster</see> is neutral/indeterminate.  Not available to player characters.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.LightLevel">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.IRoom">Room</see> Light Levels.
            </summary>
            <remarks>
            These represent the possible ambient light levels found in <see cref="T:Eamon.Framework.IRoom">Room</see>s in a game.  Each Room has its
            own light level value which can be manipulated during gameplay if desired.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.LightLevel.Dark">
            <summary>
            Dark <see cref="T:Eamon.Framework.IRoom">Room</see>s are very restrictive on the kind of activities allowed.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.LightLevel.Light">
            <summary>
            Lit <see cref="T:Eamon.Framework.IRoom">Room</see>s allow the full range of Commands.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.PercentCharPolicy">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PercentCharPolicy.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PercentCharPolicy.AllMonsters">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.PluralType">
            <summary>
            An enumeration of Plural Types.
            </summary>
            <remarks>
            These plural types are applied to <see cref="T:Eamon.Framework.IArtifact">Artifact</see>s and <see cref="T:Eamon.Framework.IMonster">Monster</see>s and
            improve the aesthetics of the output, making it more natural to read.  You can modify any record at runtime to change its
            plural type, if desired.  The plural type is only applicable to plural Artifacts and group Monsters, although if possible
            you should still assign the correct one even when it won't be used.  If you have a special situation where none of the
            following values applies (e.g., "Rings of Zylo"), customized plural names can be created using <see cref="T:Eamon.Framework.IEffect">Effect</see>s.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PluralType.None">
            <summary>
            No plural type is ever applied.  For example, "aircraft" or "moose".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PluralType.S">
            <summary>
            The name is followed by "s".  For example, "flashlights" or "wolverines".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PluralType.Es">
            <summary>
            The name is followed by "es".  For example, "crucifixes" or "finches".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PluralType.YIes">
            <summary>
            The name ends with "y" - which is dropped - and is followed by "ies".  For example, "factories" or "canaries".
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.PoundCharPolicy">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PoundCharPolicy.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PoundCharPolicy.PlayerArtifactsOnly">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PoundCharPolicy.AllArtifacts">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.PropertyResetCode">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PropertyResetCode.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PropertyResetCode.All">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PropertyResetCode.RestoreGame">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PropertyResetCode.SwitchContext">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PropertyResetCode.RevealContainerContents">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.PunctSpaceCode">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PunctSpaceCode.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PunctSpaceCode.Single">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.PunctSpaceCode.Double">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Record">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Config">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Fileset">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Character">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Module">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Room">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Artifact">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Effect">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Monster">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.Hint">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Record.GameState">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.RoomType">
            <summary>
            An enumeration of Room Types.
            </summary>
            <remarks>
            These represent the possible types of <see cref="T:Eamon.Framework.IRoom">Room</see>s found in a game.  Each Room has its own room type value
            which can be manipulated during gameplay if desired.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.RoomType.Indoors">
            <summary>
            The <see cref="T:Eamon.Framework.IRoom">Room</see> is considered indoors; the adjacent Rooms list is prefixed with "Obvious exits".
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.RoomType.Outdoors">
            <summary>
            The <see cref="T:Eamon.Framework.IRoom">Room</see> is considered outdoors; the adjacent Rooms list is prefixed with "Obvious paths".
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Spell">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.ICharacter">Character</see> and <see cref="T:Eamon.Framework.IMonster">Monster</see> Spells.
            </summary>
            <remarks>
            These spells should be familiar to anyone who has been involved with Eamon before.  The Eamon CS
            Dungeon Designer's Manual will have more details.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Spell.Blast">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Spell.Heal">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Spell.Speed">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Spell.Power">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.SpellPolicy">
            <summary>
            An enumeration used to set a <see cref="T:Eamon.Framework.IMonster">Monster</see>'s <see cref="T:Eamon.Framework.Primitive.Enums.Spell">Spell</see> policy.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.SpellPolicy.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.SpellPolicy.LeastInjured">
            <summary>
            Target the least injured available <see cref="T:Eamon.Framework.IMonster">Monster</see>.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.SpellPolicy.MostInjured">
            <summary>
            Target the most injured available <see cref="T:Eamon.Framework.IMonster">Monster</see>.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.SpellPolicy.Random">
            <summary>
            Target a random available <see cref="T:Eamon.Framework.IMonster">Monster</see>.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Stat">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.ICharacter">Character</see> Stats.  
            </summary>
            <remarks>
            The last three should be familiar to anyone who has been involved with Eamon before; <see cref="F:Eamon.Framework.Primitive.Enums.Stat.Intellect">Intellect</see>
            is unique to Eamon CS, and represents the character's mental capacity, wisdom and/or intelligence.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Stat.Intellect">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Stat.Hardiness">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Stat.Agility">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Stat.Charisma">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.StateDescDisplayCode">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.StateDescDisplayCode.None">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.StateDescDisplayCode.SideNotesOnly">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.StateDescDisplayCode.AllStateDescs">
            <summary></summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Status">
            <summary>
            An enumeration of (<see cref="T:Eamon.Framework.ICharacter">Character</see>) Statuses.
            </summary>
            <remarks>
            These represent the possible states that a player character can be in.  Each <see cref="T:Eamon.Framework.ICharacter">Character</see> has an
            associated Status that is set based on various game activities.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Status.Unknown">
            <summary>
            The state of the <see cref="T:Eamon.Framework.ICharacter">Character</see> is indeterminate (in practice, this <see cref="T:Eamon.Framework.Primitive.Enums.Status">Status</see> is unused).
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Status.Alive">
            <summary>
            The <see cref="T:Eamon.Framework.ICharacter">Character</see> is available for use; this is the default <see cref="T:Eamon.Framework.Primitive.Enums.Status">Status</see>.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Status.Dead">
            <summary>
            The <see cref="T:Eamon.Framework.ICharacter">Character</see> is not available for use; this is trivially reversible, however.
            </summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Status.Adventuring">
            <summary>
            The <see cref="T:Eamon.Framework.ICharacter">Character</see> is out on an adventure.
            </summary>
        </member>
        <member name="T:Eamon.Framework.Primitive.Enums.Weapon">
            <summary>
            An enumeration of <see cref="T:Eamon.Framework.ICharacter">Character</see> Weapon Skills.
            </summary>
            <remarks>
            These weapon skills should be familiar to anyone who has been involved with Eamon before.  The Eamon CS
            Dungeon Designer's Manual will have more details.
            </remarks>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Weapon.Axe">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Weapon.Bow">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Weapon.Club">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Weapon.Spear">
            <summary></summary>
        </member>
        <member name="F:Eamon.Framework.Primitive.Enums.Weapon.Sword">
            <summary></summary>
        </member>
        <member name="T:Eamon.Game.Attributes.ClassMappingsAttribute">
            <summary>
            An attribute that decorates concrete classes in Eamon CS, which corresponding interfaces resolve to via
            dependency injection.
            </summary>
        </member>
        <member name="M:Eamon.Game.Attributes.ClassMappingsAttribute.#ctor(System.Type)">
            <summary>
            An attribute that indicates this concrete class is the Value in a Key/Value pair stored in the
            <see cref="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">ClassMappingsDictionary</see>;
            the Key is the interface provided as a parameter.
            </summary>
        </member>
        <member name="M:Eamon.Game.Attributes.ClassMappingsAttribute.#ctor">
            <summary>
            An attribute that indicates this concrete class is the Value in a Key/Value pair stored in the
            <see cref="P:Eamon.Framework.Plugin.IEngine.ClassMappingsDictionary">ClassMappingsDictionary</see>;
            the Key is a corresponding interface with the same name but prefixed with "I".
            </summary>
        </member>
        <member name="T:Eamon.Game.Attributes.FieldNameAttribute">
            <summary>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Eamon.Game.Attributes.FieldNameAttribute.#ctor(System.Int64)">
            <summary>
            </summary>
        </member>
        <member name="T:Eamon.Game.Attributes.LayoutAttribute">
            <summary>
            </summary>
            <remarks>
            Full credit:  https://stackoverflow.com/questions/26060441/reading-data-from-fixed-length-file-into-class-objects
            </remarks>
        </member>
        <member name="M:Eamon.Game.Extensions.ArrayExtensions.FindAllIndexOf``1(``0[],System.Predicate{``0})">
            <summary>
            Gets the indexes for elements that match the conditions defined by the specified predicate.
            </summary>
            <typeparam name="T">The type of the elements of the array.</typeparam>
            <param name="array">The one-dimensional, zero-based <see cref="T:System.Array"/> to search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"/> that defines the conditions of the elements to search for.</param>
            <returns>
            An <see cref="T:System.Array"/> containing all the indexes of elements that match the conditions defined by the
            specified predicate, if found; otherwise, an empty Array.
            </returns>
            <remarks>
            Full credit:  https://stackoverflow.com/questions/10443461/c-sharp-array-findallindexof-which-findall-indexof
            </remarks>
        </member>
        <member name="M:Eamon.Game.Extensions.StringExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            Indicates whether this <see cref="T:System.String">string</see> contains the supplied string (using <see cref="M:System.String.IndexOf(System.String,System.StringComparison)">IndexOf</see>).
            </summary>
            <param name="source">The string to search.</param>
            <param name="toCheck">The string to look for.</param>
            <param name="comp">The type of string comparison to use.</param>
            <returns><c>True</c> if the supplied string is found; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Eamon.Game.Extensions.StringExtensions.ContainsAny(System.String,System.String[],System.StringComparison)">
            <summary>
            Indicates whether this <see cref="T:System.String">string</see> contains any of the strings in the supplied array (using <see cref="M:System.String.IndexOf(System.String,System.StringComparison)">IndexOf</see>).
            </summary>
            <param name="source">The string to search.</param>
            <param name="toCheckArray">The array of strings to look for.</param>
            <param name="comp">The type of string comparison to use.</param>
            <returns><c>True</c> if any of the strings are found; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameStateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameIsCharOwned">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameIsListed">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNamePluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameCategoriesType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameCategoriesField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameCategoriesField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameCategoriesField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameCategoriesField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetPrintedNameCategoriesField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategories(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategoriesType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategoriesField1(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategoriesField2(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategoriesField3(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategoriesField4(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetNameCategoriesField5(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetValueCategoriesType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetValueCategoriesField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetValueCategoriesField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetValueCategoriesField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetValueCategoriesField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.GetValueCategoriesField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateStateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidatePluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategories">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategoriesType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategoriesField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategoriesField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategoriesField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategoriesField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateCategoriesField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesLocation">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesCategories">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesCategoriesField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesCategoriesField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ValidateInterdependenciesCategoriesField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescStateDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescIsCharOwned">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescIsPlural">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescIsListed">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescValue">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescWeight">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescLocation">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescCategoriesType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescCategoriesField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescCategoriesField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescCategoriesField3">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescCategoriesField4">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.PrintDescCategoriesField5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListStateDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListIsCharOwned">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListIsPlural">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListIsListed">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListValue">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListWeight">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListLocation">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategories">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategoriesType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategoriesField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategoriesField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategoriesField3">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategoriesField4">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.ListCategoriesField5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputStateDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputIsCharOwned">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputIsPlural">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputIsListed">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputValue">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputWeight">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputLocation">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategories">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategoriesType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategoriesField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategoriesField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategoriesField3">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategoriesField4">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.InputCategoriesField5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueLocation">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueCategoriesType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueCategoriesField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueCategoriesField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueCategoriesField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueCategoriesField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValueCategoriesField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ArtifactHelper.BuildValue(System.Int64,System.Char,System.Int64,System.String)">
            <summary></summary>
            <param name="bufSize"></param>
            <param name="fillChar"></param>
            <param name="offset"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameStatsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameSpellAbilitiesElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponAbilitiesElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameArmorExpertise">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameHeldGold">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameBankGold">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameArmorClass">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetPrintedNameWeaponsField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameStats(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameStatsElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameSpellAbilities(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameSpellAbilitiesElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponAbilities(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponAbilitiesElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmor(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorName(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorDesc(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorIsPlural(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorPluralType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorArticleType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorValue(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorWeight(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorField1(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameArmorField2(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShield(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldName(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldDesc(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldIsPlural(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldPluralType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldArticleType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldValue(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldWeight(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldField1(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameShieldField2(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeapons(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsName(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsDesc(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsIsPlural(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsPluralType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsArticleType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsValue(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsWeight(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsType(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsField1(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsField2(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsField3(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsField4(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetNameWeaponsField5(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueStatsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueSpellAbilitiesElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponAbilitiesElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueArmorField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueShieldField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.GetValueWeaponsField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateGender">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateStatus">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateStats">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateStatsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateSpellAbilities">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateSpellAbilitiesElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponAbilities">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponAbilitiesElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorExpertise">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateHeldGold">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateBankGold">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorClass">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmor">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateArmorField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShield">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateShieldField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeapons">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsIsPlural">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsValue">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsWeight">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsField3">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsField4">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ValidateWeaponsField5">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescGender">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescStatus">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescStatsElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescSpellAbilitiesElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponAbilitiesElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescArmorExpertise">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescHeldGold">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescBankGold">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescArmorClass">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsIsPlural">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsField3">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsField4">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.PrintDescWeaponsField5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListGender">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListStatus">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListStats">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListStatsElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListSpellAbilities">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListSpellAbilitiesElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponAbilities">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponAbilitiesElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListArmorExpertise">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListHeldGold">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListBankGold">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListArmorClass">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeapons">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsIsPlural">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsField3">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsField4">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.ListWeaponsField5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputGender">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputStatus">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputStats">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputStatsElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputSpellAbilities">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputSpellAbilitiesElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponAbilities">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponAbilitiesElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputArmorExpertise">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputHeldGold">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputBankGold">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputArmorClass">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeapons">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsIsPlural">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsField3">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsField4">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.CharacterHelper.InputWeaponsField5">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.GetPrintedNameShowDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.GetPrintedNameResolveEffects">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.GetPrintedNameGenerateUids">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.GetPrintedNameFieldDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ValidateFieldDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ValidateWordWrapMargin">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.PrintDescShowDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.PrintDescResolveEffects">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.PrintDescGenerateUids">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.PrintDescFieldDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ListShowDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ListResolveEffects">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ListGenerateUids">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.ListFieldDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.InputShowDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.InputResolveEffects">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.InputGenerateUids">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ConfigHelper.InputFieldDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.ValidateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.ValidateInterdependenciesDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.PrintDescDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.ListDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.EffectHelper.InputDesc">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Helpers.FilesetHelper.WorkDirRegex">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameWorkDir">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNamePluginFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameConfigFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameFilesetFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameCharacterFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameModuleFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameRoomFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameArtifactFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameEffectFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameMonsterFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameHintFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.GetPrintedNameGameStateFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateWorkDir">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidatePluginFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateConfigFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateFilesetFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateCharacterFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateModuleFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateRoomFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateArtifactFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateEffectFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateMonsterFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateHintFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ValidateGameStateFileName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescWorkDir">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescPluginFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescConfigFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescFilesetFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescCharacterFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescModuleFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescRoomFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescArtifactFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescEffectFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescMonsterFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescHintFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.PrintDescGameStateFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListWorkDir">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListPluginFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListConfigFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListFilesetFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListCharacterFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListModuleFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListRoomFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListArtifactFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListEffectFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListMonsterFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListHintFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.ListGameStateFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputWorkDir">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputPluginFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputConfigFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputFilesetFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputCharacterFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputModuleFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputRoomFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputArtifactFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputEffectFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputMonsterFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputHintFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.FilesetHelper.InputGameStateFileName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetNameSa(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetNameSaElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetNameImportedArtUids(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetNameImportedArtUidsElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetNameHeldWpnUids(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetNameHeldWpnUidsElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetValueSaElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetValueImportedArtUidsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.GetValueHeldWpnUidsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateAr">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateCm">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateLs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateSh">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateSpeed">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateCurrTurn">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidatePauseCombatMs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidatePauseCombatActions">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateImportedArtUidsIdx">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateUsedWpnIdx">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateSa">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateSaElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateImportedArtUids">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateImportedArtUidsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateHeldWpnUids">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.GameStateHelper.ValidateHeldWpnUidsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="F:Eamon.Game.Helpers.Generic.Helper`1._record">
            <summary></summary>
        </member>
        <member name="F:Eamon.Game.Helpers.Generic.Helper`1._lastFieldNameListType">
            <summary></summary>
        </member>
        <member name="F:Eamon.Game.Helpers.Generic.Helper`1._fieldNameList">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Helpers.Generic.Helper`1.FieldNameList">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Helpers.Generic.Helper`1.ListedNameList">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Helpers.Generic.Helper`1.NameList">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.Generic.Helper`1.GetPrintedNameIsUidRecycled">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.Generic.Helper`1.GetPrintedNameDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.Generic.Helper`1.GetPrintedNameArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.Generic.Helper`1.BuildValue(System.String)">
            <summary></summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.Generic.Helper`1.SetUidIfInvalid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.GetPrintedNameNumAnswers">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.GetPrintedNameAnswersElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.GetNameAnswers(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.GetNameAnswersElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.GetValueAnswersElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateQuestion">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateNumAnswers">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateAnswers">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateAnswersElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateInterdependenciesQuestion">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateInterdependenciesAnswers">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ValidateInterdependenciesAnswersElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.PrintDescActive">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.PrintDescQuestion">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.PrintDescNumAnswers">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.PrintDescAnswersElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ListActive">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ListQuestion">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ListNumAnswers">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ListAnswers">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.ListAnswersElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.InputActive">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.InputQuestion">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.InputNumAnswers">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.InputAnswers">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.HintHelper.InputAnswersElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameVolLabel">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameSerialNum">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameLastMod">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameIntroStory">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameNumDirs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameNumRooms">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameNumArtifacts">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameNumEffects">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameNumMonsters">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.GetPrintedNameNumHints">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateAuthor">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateVolLabel">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateSerialNum">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateLastMod">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateIntroStory">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateNumDirs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateNumRooms">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateNumArtifacts">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateNumEffects">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateNumMonsters">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateNumHints">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateInterdependenciesDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ValidateInterdependenciesIntroStory">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescAuthor">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescVolLabel">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescSerialNum">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescIntroStory">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.PrintDescNumDirs">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListAuthor">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListVolLabel">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListSerialNum">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListLastMod">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListIntroStory">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListNumDirs">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListNumRooms">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListNumArtifacts">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListNumEffects">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListNumMonsters">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.ListNumHints">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputAuthor">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputVolLabel">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputSerialNum">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputLastMod">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputIntroStory">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputNumDirs">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputNumRooms">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputNumArtifacts">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputNumEffects">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputNumMonsters">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.ModuleHelper.InputNumHints">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameStateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameIsListed">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNamePluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameGroupCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameAttackCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameCombatCode">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameWeapon">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameNwDice">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameNwSides">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameDeadBody">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetPrintedNameField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetValueSpellsSpell">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetValueSpellsField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.GetValueSpellsField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateStateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidatePluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateArticleType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateHardiness">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateAgility">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateGroupCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateAttackCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateCourage">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateCombatCode">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateArmor">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateNwDice">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateNwSides">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateFriendliness">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateGender">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateCurrGroupCount">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateReaction">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateDmgTaken">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateSpells">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateSpellsSpell">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateSpellsField1">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateSpellsField2">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateAfterDatabaseLoadedWeapon">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateInterdependenciesDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateInterdependenciesPluralType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateInterdependenciesLocation">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateInterdependenciesWeapon">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ValidateInterdependenciesDeadBody">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescStateDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescIsListed">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescHardiness">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescAgility">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescGroupCount">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescAttackCount">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescCourage">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescLocation">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescCombatCode">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescArmor">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescWeapon">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescNwDice">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescNwSides">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescDeadBody">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescFriendliness">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.PrintDescGender">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListStateDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListIsListed">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListHardiness">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListAgility">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListGroupCount">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListAttackCount">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListCourage">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListLocation">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListCombatCode">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListArmor">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListWeapon">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListNwDice">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListNwSides">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListDeadBody">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListFriendliness">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListGender">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.ListField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputStateDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputIsListed">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputPluralType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputArticleType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputHardiness">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputAgility">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputGroupCount">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputAttackCount">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputCourage">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputLocation">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputCombatCode">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputArmor">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputWeapon">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputNwDice">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputNwSides">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputDeadBody">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputFriendliness">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputGender">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputField1">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.MonsterHelper.InputField2">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.GetPrintedNameLightLvl">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.GetPrintedNameDirsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.GetNameDirs(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.GetNameDirsElement(System.Boolean)">
            <summary></summary>
            <param name="addToNameList"></param>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.GetValueDirsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateUid">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateName">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateLightLvl">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateType">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateZone">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateInterdependenciesDesc">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateInterdependenciesDirs">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ValidateInterdependenciesDirsElement">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescLightLvl">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescZone">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.PrintDescDirsElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListLightLvl">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListZone">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListDirs">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.ListDirsElement">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputUid">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputName">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputDesc">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputSeen">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputLightLvl">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputType">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputZone">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputDirs">
            <summary></summary>
        </member>
        <member name="M:Eamon.Game.Helpers.RoomHelper.InputDirsElement">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.RulesetVersions">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.RvStackTop">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Databases">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.DbStackTop">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Rand">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.NumberStrings">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.FieldDescNames">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.StatusNames">
            <summary>
            Gets or sets an array containing the name for each <see cref="T:Eamon.Framework.Primitive.Enums.Status"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.ClothingNames">
            <summary>
            Gets or sets an array containing the name for each <see cref="T:Eamon.Framework.Primitive.Enums.Clothing"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.CombatCodeDescs">
            <summary>
            Gets or sets an array containing the description for each <see cref="T:Eamon.Framework.Primitive.Enums.CombatCode"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.ContainerDisplayCodeDescs">
            <summary></summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.LightLevelNames">
            <summary>
            Gets or sets an array containing the name for each <see cref="T:Eamon.Framework.Primitive.Enums.LightLevel"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Stats">
            <summary>
            Gets or sets an array containing data for each <see cref="T:Eamon.Framework.Primitive.Enums.Stat"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Spells">
            <summary>
            Gets or sets an array containing data for each <see cref="T:Eamon.Framework.Primitive.Enums.Spell"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Weapons">
            <summary>
            Gets or sets an array containing data for each <see cref="T:Eamon.Framework.Primitive.Enums.Weapon"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Armors">
            <summary>
            Gets or sets an array containing data for each <see cref="T:Eamon.Framework.Primitive.Enums.Armor"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.Directions">
            <summary>
            Gets or sets an array containing data for each <see cref="T:Eamon.Framework.Primitive.Enums.Direction"/>.
            </summary>
        </member>
        <member name="P:Eamon.Game.Plugin.Engine.ArtifactTypes">
            <summary>
            Gets or sets an array containing data for each <see cref="T:Eamon.Framework.Primitive.Enums.ArtifactType"/>.
            </summary>
        </member>
        <member name="M:Eamon.Game.Plugin.Engine.RestoreRecords(System.Collections.Generic.IList{Eamon.Framework.IGameBase})">
            <summary></summary>
            <param name="recordList"></param>
        </member>
        <member name="T:Eamon.Game.Utilities.FixedLengthReader">
            <summary>
            </summary>
            <remarks>
            Full credit:  https://stackoverflow.com/questions/26060441/reading-data-from-fixed-length-file-into-class-objects
            </remarks>
        </member>
        <member name="T:Eamon.RetCode">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.CycleFound">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.InvalidObj">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Expired">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.NotAllocated">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Unsupported">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.AlreadyExists">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Unimplemented">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.InvalidFmt">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.IsFull">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.IsEmpty">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.NotFound02">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.NotFound01">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.NotFound">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.OutOfMemory">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.InvalidArg">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.TimeOut">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Failure04">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Failure03">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Failure02">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Failure01">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Failure">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Success">
            <summary></summary>
        </member>
        <member name="F:Eamon.RetCode.Aborted_S">
            <summary></summary>
        </member>
        <member name="T:Eamon.ThirdParty.BTree`1">
            <summary>
            A sorted collection (set) data structure using b-trees.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.#ctor">
            <summary>
            Initializes a new BTree instance; used by the SharpSerializer.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.#ctor(System.Int32)">
            <summary>
            Initializes a new BTree instance.
            </summary>
            <param name="nodeCapacity">The node capacity.</param>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.#ctor(System.Collections.Generic.IComparer{`0},System.Int32)">
            <summary>
            Initializes a new BTree instance with the specified comparer.
            </summary>
            <param name="comparer"></param>
            <param name="nodeCapacity"></param>
        </member>
        <member name="P:Eamon.ThirdParty.BTree`1.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:Eamon.ThirdParty.BTree`1.Comparer">
            <summary>
            Gets the comparer used to order items in the collection.
            </summary>
        </member>
        <member name="P:Eamon.ThirdParty.BTree`1.IsReadOnly">
            <summary>
            Gets or sets indication whether this collection is readonly or mutable.
            </summary>
        </member>
        <member name="P:Eamon.ThirdParty.BTree`1.AllowDuplicates">
            <summary>
            Gets or sets indication whether this collection allows duplicate values.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.At(System.Int32)">
            <summary>
            Gets the item at the specified index. O(log N)
            </summary>
            <param name="index">The index for the item to retrieve.</param>
            <returns>The value of the item at the specified index.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Contains(`0)">
            <summary>
            Gets a value indicating whether the specified value is in the collection. O(log N)
            </summary>
            <param name="value">The value.</param>
            <returns>True if the collection contains at item with the value; Otherwise, false.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.TryGetValue(`0,`0@)">
            <summary>
            Searches the collection for a given value and returns the equal value it finds, if any. O(log N)
            </summary>
            <param name="equalValue">The value of the node to search for.</param>
            <param name="actualValue">The value from the collection that the search found, or the default value of T when the search yielded no match.</param>
            <returns>A value indicating whether the search was successful.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Add(`0)">
            <summary>
            Adds the specified value to the collection. O(log N)
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Clear">
            <summary>
            Clears the collection of all elements. O(1)
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Remove(`0)">
            <summary>
            Removes the specified key value from the collection. O(log N)
            </summary>
            <param name="value">The key value to remove.</param>
            <returns>True if the value was added; otherwise, false.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index. O(log N)
            </summary>
            <param name="index">The index from which to remove.</param>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.GetEnumerator">
            <summary>
            Gets an enumerator for the collection. O(1), move next: O(1)
            </summary>
            <returns>An enumerator for the collection.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the collection into the specified array. O(N)
            </summary>
            <param name="array">The array into which to copy.</param>
            <param name="arrayIndex">The index at which to start copying.</param>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.FirstIndexWhereGreaterThan(`0)">
            <summary>
            Gets the index of the first item greater than the specified value. O(log N), move next: O(1)
            </summary>
            <param name="value">The value for which to find the index.</param>
            <returns>The index of the first item greater than the specified value, or Count if no such item exists.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.LastIndexWhereLessThan(`0)">
            <summary>
            Gets the index of the last item less than the specified key. O(log N), move next: O(1)
            </summary>
            <param name="value">The value for which to find the index.</param>
            <returns>The index of the last item less than the specified value, or -1 if no such item exists.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.WhereGreaterOrEqual(`0)">
            <summary>
            Get all items equal to or greater than the specified value, starting with the lowest index and moving forwards. O(log N), move next: O(1)
            </summary>
            <param name="value">The value.</param>
            <returns>All items having values equal to or greater than the specified value.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.WhereLessOrEqualBackwards(`0)">
            <summary>
            Get all items less than or equal to the specified value, starting with the highest index and moving backwards. O(log N), move next: O(1)
            </summary>
            <param name="value">The key value.</param>
            <returns>All items having values equal to or greater than the specified value.</returns>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.ForwardFromIndex(System.Int32)">
            <summary>
            Get all items starting at the index, and moving forward. O(log N), move next: O(1)
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.BackwardFromIndex(System.Int32)">
            <summary>
            Get all items starting at the index, and moving backward. O(log N), move next: O(1)
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.#ctor(System.Int32)">
            <summary>
            Initialize the first node in the BTree structure.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.GetKey(System.Int32)">
            <summary>
            Gets the key at the specified position.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.LeafAt(Eamon.ThirdParty.BTree{`0}.Node,System.Int32@)">
            <summary>
            Get the leaf node at the specified index in the tree defined by the specified root.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.Find(Eamon.ThirdParty.BTree{`0}.Node,`0,System.Collections.Generic.IComparer{`0},System.Int32,Eamon.ThirdParty.BTree{`0}.Node@,System.Int32@)">
            <summary>
            Find the node and index in the tree defined by the specified root.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.Insert(`0,Eamon.ThirdParty.BTree{`0}.Node,System.Int32,Eamon.ThirdParty.BTree{`0}.Node@)">
            <summary>
            Insert a new key into the leaf node at the specified position.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.Remove(Eamon.ThirdParty.BTree{`0}.Node,System.Int32,Eamon.ThirdParty.BTree{`0}.Node@)">
            <summary>
            Remove the item from the node at the specified position.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.ForwardFromIndex(Eamon.ThirdParty.BTree{`0}.Node,System.Int32)">
            <summary>
            Get all items starting at the index, and moving forward.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.BackwardFromIndex(Eamon.ThirdParty.BTree{`0}.Node,System.Int32)">
            <summary>
            Get all items starting at the index, and moving backward.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.Clear(Eamon.ThirdParty.BTree{`0}.Node)">
            <summary>
            Clear all values from the specified node.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.GetRootIndex(Eamon.ThirdParty.BTree{`0}.Node,System.Int32)">
            <summary>
            Get the index relative to the root node, for the position in the specified leaf.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.BTree`1.Node.MoveToDuplicatesBoundary(`0,System.Collections.Generic.IComparer{`0},System.Int32,Eamon.ThirdParty.BTree{`0}.Node@,System.Int32@)">
            <summary>
            (Assumes: key is a duplicate in node at pos) Move to the side on the range of duplicates,
            as indicated by the sign of duplicatesBias.
            </summary>
            <param name="key"></param>
            <param name="keyComparer"></param>
            <param name="duplicatesBias"></param>
            <param name="node"></param>
            <param name="pos"></param>
        </member>
        <member name="T:Eamon.ThirdParty.ISortedCollection`1">
            <summary>
            Represents a generic interface of an ordered collection.
            </summary>
            <typeparam name="T">The type of elements in the collection.</typeparam>
        </member>
        <member name="P:Eamon.ThirdParty.ISortedCollection`1.Comparer">
            <summary>
            Gets the comparer used to order items in the collection.
            </summary>
        </member>
        <member name="P:Eamon.ThirdParty.ISortedCollection`1.AllowDuplicates">
            <summary>
            Gets indication of whether the collection allows duplicate values.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.TryGetValue(`0,`0@)">
            <summary>
            Searches the collection for a given value and returns the equal value it finds, if any.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.WhereGreaterOrEqual(`0)">
            <summary>
            Get all items equal to or greater than the specified value, starting with the lowest index and moving forwards.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.WhereLessOrEqualBackwards(`0)">
            <summary>
            Get all items less than or equal to the specified value, starting with the highest index and moving backwards.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.FirstIndexWhereGreaterThan(`0)">
            <summary>
            Gets the index of the first item greater than the specified value.
            /// </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.LastIndexWhereLessThan(`0)">
            <summary>
            Gets the index of the last item less than the specified key.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.At(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.ForwardFromIndex(System.Int32)">
            <summary>
            Get all items starting at the index, and moving forward.
            </summary>
        </member>
        <member name="M:Eamon.ThirdParty.ISortedCollection`1.BackwardFromIndex(System.Int32)">
            <summary>
            Get all items starting at the index, and moving backward.
            </summary>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.Remove(System.Text.StringBuilder,System.Char[])">
            <summary>
            Removes all occurences of specified characters from <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to remove from.</param>
            <param name="removeChars">A Unicode characters to remove.</param>
            <returns>
            Returns <see cref="T:System.Text.StringBuilder"/> without specified Unicode characters.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="removeChars"/> is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.Remove(System.Text.StringBuilder,System.Int32)">
            <summary>
            Removes the range of characters from the specified index to the end of <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to remove from.</param>
            <param name="startIndex">The zero-based position to begin deleting characters.</param>
            <returns>A reference to this instance after the excise operation has completed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="startIndex"/> is less than zero, or <paramref name="startIndex"/> is greater
            than the length - 1 of this instance.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.TrimStart(System.Text.StringBuilder,System.Char[])">
            <summary>
            Removes all leading occurrences of a set of characters specified in an array 
            from the current <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to remove from.</param>
            <param name="trimChars">An array of Unicode characters to remove, or null.</param>
            <returns>
            The <see cref="T:System.Text.StringBuilder"/> object that contains a list of characters 
            that remains after all occurrences of the characters in the <paramref name="trimChars"/> parameter 
            are removed from the end of the current string. If <paramref name="trimChars"/> is null or an empty array, 
            Unicode white-space characters are removed instead.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder,System.Char[])">
            <summary>
            Removes all trailing occurrences of a set of characters specified in an array 
            from the current <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to remove from.</param>
            <param name="trimChars">An array of Unicode characters to remove, or null.</param>
            <returns>
            The <see cref="T:System.Text.StringBuilder"/> object that contains a list of characters that remains 
            after all occurrences of the characters in the <paramref name="trimChars"/> parameter are removed 
            from the end of the current string. If <paramref name="trimChars"/> is null or an empty array, 
            Unicode white-space characters are removed instead.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.Trim(System.Text.StringBuilder)">
            <summary>
            Removes all leading and trailing white-space characters from the current <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to remove from.</param>
            <returns>
            The <see cref="T:System.Text.StringBuilder"/> object that contains a list of characters 
            that remains after all white-space characters are removed 
            from the start and end of the current StringBuilder.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.Trim(System.Text.StringBuilder,System.Char[])">
            <summary>
            Removes all leading and trailing occurrences of a set of characters specified in an array
            from the current <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to </param>
            <param name="trimChars">An array of Unicode characters to remove, or null.</param>
            <returns>
            The <see cref="T:System.Text.StringBuilder"/> object that contains a list of characters that remains 
            after all occurrences of the characters in the <paramref name="trimChars"/> parameter are removed 
            from the end of the current StringBuilder. If <paramref name="trimChars"/> is null or an empty array, 
            Unicode white-space characters are removed instead.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.Char)">
            <summary>
            Reports the zero-based index position of the first occurrence of the specified Unicode
            character within this instance.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to </param>
            <param name="value">A Unicode character to seek.</param>
            <returns>
            The zero-based index position of <paramref name="value"/> if that character is found, or -1
            if it is not.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.Char,System.Int32)">
            <summary>
            Reports the zero-based index position of the first occurrence of the specified Unicode
            character within this intance. The search starts at a specified character position.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">A Unicode character to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <returns>
            The zero-based index position of <paramref name="value"/> if that character is found, or -1
            if it is not.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The current instance <see cref="P:System.Text.StringBuilder.Length"/> does not equal 0, and <paramref name="startIndex"/> 
            is less than 0 (zero) or greater than the length of the <see cref="T:System.Text.StringBuilder"/>.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.Char,System.Int32,System.Int32)">
            <summary>
            Reports the zero-based index of the first occurrence of the specified Unicode
            character in this <see cref="T:System.Text.StringBuilder"/>. The search starts 
            at a specified character position and examines a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">A Unicode character to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <returns>
            The zero-based index position of <paramref name="value"/> if that character is found, or -1 
            if it is not.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The current instance <see cref="P:System.Text.StringBuilder.Length"/> does not equal 0, and <paramref name="count"/> 
            or <paramref name="startIndex"/> is negative.-or- <paramref name="startIndex"/> is greater than 
            the length of this <see cref="T:System.Text.StringBuilder"/>.
            -or-The current instance <see cref="P:System.Text.StringBuilder.Length"/> does not equal 0, and <paramref name="count"/> 
            is greater than the length of this string minus <paramref name="startIndex"/>. 
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
            Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">The string to seek.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            The zero-based index position of the <paramref name="value"/> parameter if that string is found, 
            or -1 if it is not. If <paramref name="value"/> is <see cref="F:System.String.Empty"/>, the return value 
            is 0.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String,System.Int32,System.Boolean)">
            <summary>
            Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.Text.StringBuilder"/> object. 
            Parameter specifies the starting search position in the current <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">The string to seek. </param>
            <param name="startIndex">The search starting position.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            The zero-based index position of the <paramref name="value"/> parameter if that string is found, 
            or -1 if it is not. If <paramref name="value"/> is <see cref="F:System.String.Empty"/>, the return value 
            is <paramref name="startIndex"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is less than 0 (zero) or greater than the length of this <see cref="T:System.Text.StringBuilder"/>.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.Text.StringBuilder"/> object. 
            The search starts at a specified character position and examines a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">The string to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            The zero-based index position of the <paramref name="value"/> parameter if that string is found, 
            or -1 if it is not. If <paramref name="value"/> is <see cref="F:System.String.Empty"/>, 
            the return value is <paramref name="startIndex"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="count"/> or <paramref name="startIndex"/> is negative.-or- <paramref name="startIndex"/> is 
            greater than the length of this instance.-or-<paramref name="count"/> is greater than the length of 
            this <see cref="T:System.Text.StringBuilder"/> minus <paramref name="startIndex"/>.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOfAny(System.Text.StringBuilder,System.Char[])">
            <summary>
            Reports the zero-based index of the first occurrence in this instance 
            of any character in a specified array of Unicode characters.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <returns>
            The zero-based index position of the first occurrence in this instance
            where any character in <paramref name="anyOf"/> was found; -1 if no character in <paramref name="anyOf"/> was found.
            </returns>
            <exception cref="T:System.ArgumentNullException">anyOf is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOfAny(System.Text.StringBuilder,System.Char[],System.Int32)">
            <summary>
            Reports the zero-based index of the first occurrence in this instance of any character 
            in a specified array of Unicode characters. The search starts at a specified character position.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <returns>
            The zero-based index position of the first occurrence in this instance
            where any character in <paramref name="anyOf"/> was found; -1 if no character in <paramref name="anyOf"/> was found.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="anyOf"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is negative.-or-<paramref name="startIndex"/> is greater 
            than the number of characters in this instance.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.IndexOfAny(System.Text.StringBuilder,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reports the zero-based index of the first occurrence in this instance of any character 
            in a specified array of Unicode characters. The search starts at a specified character position and examines a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <returns>
            The zero-based index position of the first occurrence in this instance
            where any character in <paramref name="anyOf"/> was found; -1 if no character in <paramref name="anyOf"/> was found.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="anyOf"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="count"/> or <paramref name="startIndex"/> is negative.
            -or-<paramref name="count"/> + <paramref name="startIndex"/> is greater than the number of characters in this instance.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.Char)">
            <summary>
            Reports the zero-based index of the last occurrence of the specified Unicode
            character within this instance.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to </param>
            <param name="value">A Unicode character to seek.</param>
            <returns>
            The zero-based index position of <paramref name="value"/> if that character is found, or -1
            if it is not.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.Char,System.Int32)">
            <summary>
            Reports the zero-based index position of the last occurrence of the specified Unicode character 
            in a substring within this instance. The search starts at a specified character position and 
            proceeds backward toward the beginning of the <see cref="T:System.Text.StringBuilder"/> 
            for a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">A Unicode character to seek.</param>
            <param name="startIndex">
            The starting position of the search. The search proceeds from <paramref name="startIndex"/> toward the beginning 
            of this instance.
            </param>
            <returns>
            The zero-based index position of <paramref name="value"/> if that character is found, or -1
            if it is not.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The current instance <see cref="P:System.Text.StringBuilder.Length"/> does not equal 0, 
            and <paramref name="startIndex"/> is less than zero or greater than or equal to the length of this instance.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.Char,System.Int32,System.Int32)">
            <summary>
            Reports the zero-based index of the last occurrence of the specified Unicode
            character in this <see cref="T:System.Text.StringBuilder"/>. The search starts 
            at a specified character position and examines a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">A Unicode character to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <returns>
            The zero-based index position of <paramref name="value"/> if that character is found, or -1 
            if it is not.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The current instance <see cref="P:System.Text.StringBuilder.Length"/> does not equal 0, 
            and <paramref name="startIndex"/> is less than zero or greater than or equal to the length of this instance.
            -or-The current instance <see cref="P:System.Text.StringBuilder.Length"/> 
            does not equal 0, and <paramref name="startIndex"/> - <paramref name="count"/> + 1 is less than zero.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
            Reports the zero-based index of the last occurrence of the specified string 
            in the current <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to </param>
            <param name="value">The string to seek.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            The zero-based index position of the value parameter if that string is found, 
            or -1 if it is not. If value is <see cref="F:System.String.Empty"/>, the return value is startIndex.
            </returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.String,System.Int32,System.Boolean)">
            <summary>
            Reports the zero-based index of the last occurrence of the specified string in the current <see cref="T:System.Text.StringBuilder"/> object. 
            Parameter specifies the starting search position in the current <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">The string to seek. </param>
            <param name="startIndex">The search starting position.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            The zero-based index position of the value parameter if that string is found, 
            or -1 if it is not. If value is <see cref="F:System.String.Empty"/>, the return value is startIndex.
            </returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reports the zero-based index of the last occurrence of the specified string in the current <see cref="T:System.Text.StringBuilder"/> object. 
            The search starts at a specified character position and examines a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="value">The string to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            The zero-based index position of the value parameter if that string is found, 
            or -1 if it is not. If value is <see cref="F:System.String.Empty"/>, the return value is startIndex.
            </returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            startIndex is less than 0 (zero) or greater than the length of this string.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOfAny(System.Text.StringBuilder,System.Char[])">
            <summary>
            Reports the zero-based index of the last occurrence in this instance 
            of any character in a specified array of Unicode characters.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <returns>
            The zero-based index position of the last occurrence in this instance
            where any character in <paramref name="anyOf"/> was found; -1 if no character in <paramref name="anyOf"/> was found.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="anyOf"/> is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOfAny(System.Text.StringBuilder,System.Char[],System.Int32)">
            <summary>
            Reports the zero-based index of the last occurrence in this instance of any character 
            in a specified array of Unicode characters. The search starts at a specified character position.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <returns>
            The zero-based index position of the last occurrence in this instance
            where any character in <paramref name="anyOf"/> was found; -1 if no character in <paramref name="anyOf"/> was found.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="anyOf"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is negative.-or- <paramref name="startIndex"/> is greater 
            than the number of characters in this instance.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.LastIndexOfAny(System.Text.StringBuilder,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reports the zero-based index of the last occurrence in this instance of any character 
            in a specified array of Unicode characters. The search starts at a specified character position and examines a specified number of character positions.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to search.</param>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <returns>
            The zero-based index position of the last occurrence in this instance
            where any character in <paramref name="anyOf"/> was found; -1 if no character in <paramref name="anyOf"/> was found.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="anyOf"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="count"/> or <paramref name="startIndex"/> is negative.
            -or-<paramref name="count"/> + <paramref name="startIndex"/> is greater than the number of characters in this instance.
            </exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.StartsWith(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
            Determines whether this instance of <see cref="T:System.Text.StringBuilder"/> starts with the specified string.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to compare.</param>
            <param name="value">The string to compare.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            true if the <paramref name="value"/> parameter matches the beginning of this string; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.EndsWith(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
            Determines whether this instance of <see cref="T:System.Text.StringBuilder"/> ends with the specified string.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to compare.</param>
            <param name="value">The string to compare to the substring at the end of this instance.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            true if the <paramref name="value"/> parameter matches the beginning of this string; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.ToLower(System.Text.StringBuilder)">
            <summary>
            Returns a <see cref="T:System.Text.StringBuilder"/> converted to lowercase.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to convert to lowercase.</param>
            <returns>The <see cref="T:System.Text.StringBuilder"/> converted to lowercase.</returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.ToLower(System.Text.StringBuilder,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Text.StringBuilder"/> converted to lowercase, using the casing rules of the specified culture.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to convert to lowercase.</param>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>The <see cref="T:System.Text.StringBuilder"/> converted to lowercase using specified culture.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture"/>is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.ToLowerInvariant(System.Text.StringBuilder)">
            <summary>
            Returns a <see cref="T:System.Text.StringBuilder"/> converted to lowercase, using the casing rules of the invarian culture.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to convert to lowercase.</param>
            <returns>The <see cref="T:System.Text.StringBuilder"/> converted to lowercase using invariant culture.</returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.ToUpper(System.Text.StringBuilder)">
            <summary>
            Returns a <see cref="T:System.Text.StringBuilder"/> converted to uppercase.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to convert to uppercase.</param>
            <returns>The <see cref="T:System.Text.StringBuilder"/> converted to uppercase.</returns>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.ToUpper(System.Text.StringBuilder,System.Globalization.CultureInfo)">
            <summary>
            Returns a <see cref="T:System.Text.StringBuilder"/> converted to uppercase, using the casing rules of the specified culture.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to convert to uppercase.</param>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>The <see cref="T:System.Text.StringBuilder"/> converted to uppercase using specified culture.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture"/>is null.</exception>
        </member>
        <member name="M:System.Text.StringBuilderExtensions.ToUpperInvariant(System.Text.StringBuilder)">
            <summary>
            Returns a <see cref="T:System.Text.StringBuilder"/> converted to uppercase, using the casing rules of the invariant culture.
            </summary>
            <param name="sb">A <see cref="T:System.Text.StringBuilder"/> to convert to uppercase.</param>
            <returns>The <see cref="T:System.Text.StringBuilder"/> converted to uppercase using invariant culture.</returns>
        </member>
    </members>
</doc>
