<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WrenholdsSecretVigil</name>
    </assembly>
    <members>
        <member name="T:WrenholdsSecretVigil.Framework.Commands.IDigCommand">
            <summary></summary>
        </member>
        <member name="T:WrenholdsSecretVigil.Framework.IArtifact">
            <inheritdoc />
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IArtifact.IsBuriedInRoomUid(System.Int64)">
            <summary>Indicates whether this <see cref="T:WrenholdsSecretVigil.Framework.IArtifact">Artifact</see> is buried in a given <see cref="T:Eamon.Framework.IRoom">Room</see>.</summary>
            <param name="roomUid">The <see cref="P:Eamon.Framework.IGameBase.Uid">Uid</see> of the <see cref="T:Eamon.Framework.IRoom">Room</see> to check.</param>
            <returns>If so then <c>true</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IArtifact.IsBuriedInRoom(Eamon.Framework.IRoom)">
            <summary>Indicates whether this <see cref="T:WrenholdsSecretVigil.Framework.IArtifact">Artifact</see> is buried in a given <see cref="T:Eamon.Framework.IRoom">Room</see>.</summary>
            <param name="room">The <see cref="T:Eamon.Framework.IRoom">Room</see> to check.</param>
            <returns>If so then <c>true</c>, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:WrenholdsSecretVigil.Framework.IGameState">
            <inheritdoc />
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.IGameState.MedallionCharges">
            <summary></summary>
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.IGameState.SlimeBlasts">
            <summary></summary>
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.IGameState.PulledRope">
            <summary></summary>
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.IGameState.RemovedLifeOrb">
            <summary></summary>
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.IGameState.MonsterCurses">
            <summary></summary>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IGameState.GetMonsterCurse(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IGameState.SetMonsterCurse(System.Int64,System.Boolean)">
            <summary></summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="T:WrenholdsSecretVigil.Framework.IMonster">
            <inheritdoc />
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IMonster.ShouldRefuseToAcceptGift01(Eamon.Framework.IArtifact)">
            <summary>Indicates whether this <see cref="T:WrenholdsSecretVigil.Framework.IMonster">Monster</see> should refuse to accept a given <see cref="T:Eamon.Framework.IArtifact">Artifact</see> as a gift.</summary>
            <param name="artifact">The <see cref="T:Eamon.Framework.IArtifact">Artifact</see> to check.</param>
            <returns></returns>
        </member>
        <member name="T:WrenholdsSecretVigil.Framework.IRoom">
            <inheritdoc />
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IRoom.IsDigCommandAllowedInRoom">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IRoom.IsDirectionEffect(System.Int64)">
            <summary></summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IRoom.IsDirectionEffect(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IRoom.GetDirectionEffectUid(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.IRoom.GetDirectionEffect(Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="T:WrenholdsSecretVigil.Framework.Plugin.IEngine">
            <inheritdoc />
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.Plugin.IEngine.MonsterCurses">
            <summary></summary>
        </member>
        <member name="P:WrenholdsSecretVigil.Framework.Plugin.IEngine.DeviceOpened">
            <summary></summary>
        </member>
        <member name="M:WrenholdsSecretVigil.Framework.Plugin.IEngine.PrintMonsterCurse(Eamon.Framework.IMonster,System.Int64)">
            <summary></summary>
            <param name="monster"></param>
            <param name="effectUid"></param>
        </member>
        <member name="M:WrenholdsSecretVigil.Game.Helpers.GameStateHelper.ValidateMedallionCharges">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Game.Helpers.GameStateHelper.ValidateSlimeBlasts">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="T:WrenholdsSecretVigil.Game.Plugin.Globals">
            <inheritdoc cref="T:EamonRT.Game.Plugin.Globals"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gEngine">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gEngine"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gOut">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gOut"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gRDB">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gRDB"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gADB">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gADB"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gEDB">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gEDB"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gMDB">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gMDB"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gSentenceParser">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gSentenceParser"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gGameState">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gGameState"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gCharacter">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gCharacter"/>
        </member>
        <member name="P:WrenholdsSecretVigil.Game.Plugin.Globals.gCharMonster">
            <inheritdoc cref="P:EamonRT.Game.Plugin.Globals.gCharMonster"/>
        </member>
        <member name="M:WrenholdsSecretVigil.Game.Plugin.Globals.gActorRoom(System.Object)">
            <summary>Gets the ActorRoom property of an object as a game-specific interface.</summary>
            <param name="obj">The object with the ActorRoom property.</param>
            <remarks>
            Use only within <see cref="T:EamonRT.Framework.Parsing.ICommandParser">CommandParser</see> and <see cref="T:EamonRT.Framework.Commands.ICommand">Command</see> classes or
            their derivatives, with the "this" keyword as a parameter. It allows easy access to new methods and properties in
            a game-specific <see cref="T:Eamon.Framework.IRoom"/> interface. Adjust the return type or remove this method if no such interface
            exists.
            </remarks>
            <returns>The ActorRoom downcast to a game-specific interface.</returns>
        </member>
        <member name="M:WrenholdsSecretVigil.Game.Plugin.Globals.gIobjMonster(System.Object)">
            <summary>Gets the IobjMonster property of an object as a game-specific interface.</summary>
            <param name="obj">The object with the IobjMonster property.</param>
            <remarks>
            Use only within <see cref="T:EamonRT.Framework.Parsing.ICommandParser">CommandParser</see> and <see cref="T:EamonRT.Framework.Commands.ICommand">Command</see> classes or
            their derivatives, with the "this" keyword as a parameter. It allows easy access to new methods and properties in
            a game-specific <see cref="T:Eamon.Framework.IMonster"/> interface. Adjust the return type or remove this method if no such interface
            exists.
            </remarks>
            <returns>The IobjMonster downcast to a game-specific interface.</returns>
        </member>
    </members>
</doc>
